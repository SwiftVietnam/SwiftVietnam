<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>Cộng đồng Swift Việt Nam</title><description>Cộng đồng lập trình viên iOS, tvOS, macOS, watchOS và tvOS, và những người yêu thích ngôn ngữ lập trình Swift.</description><link>https://swiftvietnam.com</link><language>en</language><lastBuildDate>Sun, 15 Nov 2020 15:07:09 +0800</lastBuildDate><pubDate>Sun, 15 Nov 2020 15:07:09 +0800</pubDate><ttl>250</ttl><atom:link href="https://swiftvietnam.com/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-11-14_ban_tin_swift_vietnam_so_15</guid><title>Bản tin Swift Việt Nam #15</title><description>Bản tin Swift Việt Nam #15</description><link>https://swiftvietnam.com/posts/2020-11-14_ban_tin_swift_vietnam_so_15</link><pubDate>Sat, 14 Nov 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/swiftvietnam.png" alt="15"/><h1>Bản tin Swift Việt Nam #15</h1><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/ios14.png" alt="15"/><p>Bạn có biết là tính đến thời điểm hiện tại đã có nhiều thiết bị chạy iOS 14 hơn iOS 13 🤯</p><p>Ứng dụng của bạn đã hỗ trợ iOS 14 tốt chưa, bây giờ là thời điểm thích hợp để kiểm tra điều đó trước khi quá muộn đấy 😬</p><p>Tham khảo Realtime iOS 14 adaption <a href="https://mixpanel.com/trends/#report/ios_14">tại đây</a>.</p><h1>Swift:</h1><h2>Swift Algorithms</h2><p><strong>Giới thiệu package Swift Algorithms</strong></p><p>Swift Algorithms tập hợp các thuật toán liên quan đến các kiểu dữ liệu thích hợp với protocol Sequence hay Colleection</p><p>Nếu các bạn đã từng xem Video <a href="https://developer.apple.com/videos/play/wwdc2018/223/">"Embrace Algorithms"</a> ở WWDC 2018 , chắc hẳn các bạn sẽ thấy tầm quan trọng của việc sử dụng đúng thuật toán để giải quyết vấn đề trong lập trình.</p><p>Các thuật toán trong phiên bản hiện thời gồm có: - Combinations - Permutations - Product - Chunked - Chain - Cycle - Unique - Random Sampling - Indexed - Partition - Rotate</p><p>Các bạn xem giới thiệu chi tiết về <a href="https://swift.org/blog/swift-algorithms/">Swift Algorithms</a> trên trang Swift.org.</p><h2>Swift Atomics</h2><p><strong>Giới thiệu package Swift Atomics ⚛️</strong></p><p>Các bạn nào ngày xưa còn sử dụng Objective-C chắc vẫn nhớ atomic với nonatomic properties. Atomic chủ yếu được sử dụng trong môi trương multi-threading, khi nhiều threads cùng truy cập vào một biến.</p><p>Các biến trong Swift được định nghĩa non-atomic by default.</p><p>Tuy nhiên, mới đây Apple đã giới thiệu một package mã mở có tên Swift Atomics. Package này giúp chúng ta có thể xây dựng các low-level atomic operation trực tiếp bằng Swift.</p><p>Các bạn đọc thêm chi tiết về package Swift Atomics <a href="https://swift.org/blog/swift-atomics/">ở đây</a>.</p><h2>Swift on Windows</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/windows.png" alt="15"/><p><strong>Swift đã chính thức hỗ trợ Windows</strong></p><p>Sau khi hỗ trợ Linux, Swift đã chính thức hỗ trợ Windows. Như vậy chúng ta có thể sử dụng Windows PC để chạy các ứng dụng viết bằng Swift, cũng như viết mã Swift trực tiếp.</p><p>Hy vọng Apple cũng sẽ sớm đưa Xcode lên Windows để tiện cho việc viết Code.</p><p>Hướng dẫn chi tiết về việc cài đặt Swift trên Windows tại đây:</p><ul><li>📖 <a href="https://swift.org/getting-started/#installing-swift">Swift getting started</a></li><li>🎦 <a href="https://www.youtube.com/watch?v=rKN60MoqGn8">Swift on Windows</a></li></ul><h1>Bài viết:</h1><h2>Các app sẽ hiện thị như thế nào trên màn hình iPhone 12</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/iphone12_resolution.png" alt="15"/><p>Vậy là Apple đã giới thiệu hàng loạt iPhone mới 🤩. Lần này anh em chúng ta còn chả có bản Xcode GM mới để test thử ứng dụng trước khi iPhone được bán. Thế nên chắc chắn nhiều app sẽ không kịp cập nhật phiên bản mới để hỗ trợ tương thích cho các iPhone 12 mới.</p><p>Chắc hẳn các bạn sẽ thắc mắc, các app hiện đã có trên App Store được xậy dựng bằng các Xcode phiên bản cũ thì sẽ hiển thị ra sao trên màn hình iPhone 12?</p><p>Các bạn có thể tham khảo <a href="https://hacknicity.medium.com/how-ios-apps-adapt-to-the-various-iphone-12-screen-sizes-e45c021e1b8b">bài viết sau</a> để xem cách Apple scale ứng dụng cũ để hiện thị trên màn hình iPhone 12 nhé.</p><h2>Home Screen Quick Actions with SwiftUI</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/quickaction.jpg" alt="15"/><p>Với việc giới thiệu phương thức mới để quản lý lifecyle cho ứng dụng SwiftUI từ Xcode 12, chúng ta sẽ không còn AppDelegate dể thực hiện một số tác vụ như khởi tạo các delegate để xử lý Home Screen Quick Action.</p><p>Bài viết <a href="https://medium.com/@jeevat13/home-screen-quick-actions-swiftui-2-0-75d9ceac27c1">sau đây</a> sẽ giới thiệu với các bạn cách thức xử lý Home Screen Quick Action trong SwiftUI 2.0:</p><h2>SwiftUI 2.0: The magic of redacted modifier</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/redacted.png" alt="15"/><p>Redacted modifier là một tính năng mới rất hay trong SwiftUI 2.0. Nếu ai dùng ứng dụng Facebook thì bạn sẽ thấy khi mới mở ứng dụng, trong lúc các bài viết trên feed đang tải về, bạn sẽ thấy feed của bạn ở loading state đã có cấu trúc như kiểu là đã được tải xong rồi, chỉ có phần chữ là chưa hiện lên.</p><p>Trong SwiftUI 2.0, chúng ta chỉ cần cung cấp cấu trúc View, SwiftUI sẽ tự động phân tích và cung cấp một phiên bản redacted cho chúng ta sử dụng trong loading state, rất thuận tiện.</p><p>Bạn có thể tham khảo bài viết sau để biết thêm chi tiết cách thức hoạt động của redacted modifier <a href="https://swiftwithmajid.com/2020/10/22/the-magic-of-redacted-modifier-in-swiftui/">tại đây</a>.</p><h2>Test code không đồng bộ bằng Busy Assertion Pattern</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/assertion.png" alt="15"/><p>Trong một ứng dụng iOS, chúng ta có rất nhiều đoạn có chạy không đồng bộ, như code tải dữ liệu từ mạng, code xử lý các tác vụ nặng, vân vân ... Việc kiểm thử các đoạn code này thường được làm bằng cách sử dụng expectation để chờ cho các tác vụ không đồng bộ thực hiện xong.</p><p>Busy Assertion Pattern là một pattern khá hay để chúng ta đồng bộ hoá việc kiểm thử các đoạn code không đồng bộ.</p><p>Các bạn có thể đọc chi tiết về pattern này <a href="https://www.vadimbulavin.com/swift-asynchronous-unit-testing-with-busy-assertion-pattern/">tại đây</a>.</p><h1>Mã nguồn:</h1><h2>SwiftUI Camera</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/camera.png" alt="15"/><p>Việc SwiftUI hỗ trợ sử dụng các thành phần của UIKit nên việc tích hợp Camera vào SwiftUI không phải là việc quá khó. Tuy nhiên việc sử dụng AVFoundation để hỗ trợ tuỳ biến Camera trong SwiftUI là một tác vụ khá mới mà không phải lập trình viên nào cũng có thể hiểu ngay được.</p><p>Mình giới thiệu các bạn một series bài viết miêu tả rất chi tiết việc tích hợp Camera, sử dụng AVFoundation trong một SwiftUI. Các bạn tham khảo <a href="https://github.com/rorodriguez116/SwiftCamera">tại đây</a>.</p><h1>Tool:</h1><h2>Bagel:</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/bagel.png" alt="15"/><p>iOS Networking debugger</p><p>Bạn nào đã từng sử dụng Charles Proxy để debug network code trên iOS chắc cũng biết là chúng ta phải cài đặt nhiều Certificates rồi chỉnh sửa nhiều configurations như thế nào trước khi có thể nhìn thấy các networking traffic hiện lên trên Charles.</p><p>Mình giới thiệu các bạn một công cụ khác có tên là Bagel. Với công cụ nay, bạn sẽ embed một library nhỏ vào ứng dụng iOS của mình và sử dụng một app trên máy Mac để xem networking traffic. Rất thuận tiện trong việc tìm lỗi liên quan đến Networking.</p><p>Các bạn xem thêm chi tiết về Bagel <a href="https://github.com/yagiz/Bagel">tại đây</a> nhé.</p><h2>Lookin:</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/15/lookin.jpg" alt="15"/><p><strong>Ứng dụng debugging giao diện cho iOS Apps miễn phí và nguồn mở</strong></p><p>Ai dùng Xcode chắc đã quen với việc sử dung UI Inspector để kiểm tra và debug giao diện ứng dụng iOS apps.</p><p>Ngoài ra có một công cụ khác khá nổi tiếng cho việc nay là <a href="https://revealapp.com">Reveal</a>.</p><p>Mình xin giới thiệu với các bạn một công cụ miễn phí, nguồn mở khác phục vụ cho việc debug views, rất hữu ích khi phát triển giao diện cho ứng dụng iOS có tên là Lookin:</p><ul><li>👉 Trang chủ: <a href="https://lookin.work">https://lookin.work</a></li><li>👉 Mã nguồn: <a href="https://github.com/QMUI/LookinServer">https://github.com/QMUI/LookinServer</a></li></ul><h1>Tips &amp; Tricks:</h1><h2>Swift Tips videos</h2><p>Bạn <a href="https://twitter.com/v_pradeilles">Vincent Pradeilles</a> này là một chuyên gia về Swift người Pháp. Mình đã có dịp gặp bạn này ở một hội thảo ở Sing và rất ngưỡng mộ về kiến thức của bạn này.</p><p>Bạn Vicent vừa mới bắt đầu một kênh youtube về các tips trong Swift rất hay, mời các bạn tham khảo <a href="https://www.youtube.com/channel/UCjkoQk5fOk6lH-shlm53vlw/videos">tại đây</a></p><h1>Lời kết:</h1><p>Nếu các bạn có các bài viết liên quan đến Swift, lập trình iOS và các platform khác của Apple muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/groups/691941251234927">tham gia nhóm thảo luận Swift Việt Nam</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-09-22_ban_tin_swift_vietnam_so_14</guid><title>Bản tin Swift Việt Nam #14</title><description>Bản tin Swift Việt Nam #14</description><link>https://swiftvietnam.com/posts/2020-09-22_ban_tin_swift_vietnam_so_14</link><pubDate>Mon, 21 Sep 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/14/swiftvietnam.png" alt="14"/><h1>Bản tin Swift Việt Nam #14</h1><p>Sự kiện đáng chú ý nhất trong 2 tuần vừa rồi có lẽ là <a href="https://www.apple.com/sg/apple-events/september-2020">sự kiện Apple Event ngày 15/9</a>. Apple đã giới thiệu một số mẫu Apple Watch và iPad mới. iPhone không thấy xuất hiện. Phiên bản chính thức của iOS 14 cũng được phát hành chỉ một ngày sau sự kiện khiến cộng đồng lập trình viên iOS rất bất ngờ vì <a href="https://twitter.com/jamesthomson/status/1305927905839583234">không có thời gian chuẩn bị</a> cũng như phát hành các bản cập nhật bằng phiên bản Xcode Golden Master.</p><p>Một sự kiện đáng chú ý khá đó là việc Apple thay đổi một số chính sách trong App Store Review. Mời các bạn đọc thêm về các thay đổi đáng chú ý trong bản tin này nhé.</p><h1>Swift:</h1><h2>Swift 5.3 released</h2><p>Phiên bản Swift 5.3 được giới thiệu từ WWDC 2020 đã được phát hành cùng với Xcode 12 phiên bản chính thức.</p><ul><li>Thông tin tổng kết về phiên bản 5.3 có <a href="https://swift.org/blog/swift-5-3-released/">tại đây</a>.</li><li>Video giới thiệu Swift 5.3 tại WWDC 2020 có <a href="https://developer.apple.com/videos/play/wwdc2020/10170/">tại đây</a></li></ul><h2>Swift Cluster Membership</h2><p>Đây là thư viện để quản lý các ứng dụng Swift Server Side. Chi tiết tại <a href="https://swift.org/blog/swift-cluster-membership/">Swift Blog</a></p><h2>What's new in CryptoKit</h2><p>CryptoKit là một thư viện dùng để thực hiện các tác vụ liên quan đến Security. Nếu trước đây chung ta thường phải sử dụng OpenSSL cho việc này thì từ iOS 13, CryptoKit đã có khá đầy đủ các tính năng để thay thế được OpenSSL. Chi tiết về các tính năng mới ở CryptoKit có thể đọc <a href="https://developer.apple.com/news/?id=3bwfq45y">tại đây</a></p><h1>Apple:</h1><h2>App Store Review Guideline udpates</h2><p>Apple đã <a href="https://developer.apple.com/news/?id=xqk627qu">cập nhật guidelines</a> cho Apple Store Review, chủ yếu liên quan đến In-App-Purchase, đặc biệt là sau lùm xùm với Epic Games liên quan đến game Fortnite.</p><p>Tổng kết ngắn gọn về các thay đổi các bạn có thể đọc <a href="https://marco.org/2020/09/11/app-review-changes">tại đây</a>.</p><p>https://developer.apple.com/news/?id=xqk627qu</p><h2>Apple Store Marina Bay</h2><p>Apple vừa <a href="https://www.apple.com/sg/retail/marinabaysands/">một mở cửa hàng mới</a> với thiết kế khá độc đáo ở Singapore. Cả cửa hàng là một khối cầu nổi với thiết kế mở, góc nhìn 360 độ và có cả 1 tầng dưới mặt nước.</p><ul><li><a href="https://www.channelnewsasia.com/news/lifestyle/apple-store-marina-bay-sands-singapore-13090594">Hình ảnh về cửa hàng</a></li><li><a href="https://www.youtube.com/watch?v=RL21zx-Ej1Y">Video giới thiệu cửa hàng</a></li></ul><p>Hôm nào có điều kiện mình sẽ làm 1 vòng selfie chụp ảnh cho mọi người tham khảo.</p><h1>Bài viết:</h1><h2>The State of SwiftUI</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/14/swiftui.png" alt="14"/><p>SwiftUI được giới thiệu lần đầu tại WWDC 2019, phiên bản nâng cấp được giới thiệu tại WWDC 2020. Trải qua 2 năm, SwiftUI nhận được nhiều ý kiến trái chiều khác nhau từ giới lập trình viên iOS. Bài viết <a href="https://steipete.com/posts/state-of-swiftui/">"The State of SwiftUI"</a> của @<a href="https://steipete.com/">steipete</a> được đánh giá phản ánh rất trung thực và thực tế tình trạng hiện thời của SwiftUI.</p><h2>Lịch sử trang System Preferences trên macOS</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/14/macos_preferences.jpg" alt="14"/><p>Ai đã dùng máy Mac thì chắc chắn đã quen thuộc với ứng dụng System Preferences. Có thể nói đây là một trong những ứng dụng ít thay đổi nhất trong các phiên bản macOS. Các bạn tham khảo một bài viết khá thú vị về <a href="https://www.arun.is/blog/system-preferences/">lịch sử trang System Preferences trên macOS</a></p><h2><code>Optional</code> có thực sự luôn tốt?</h2><p><code>Optional</code> là một tính năng hữu ích của Swift, giúp lập trình viên có thể viết code để kiểm tra một biến có chứa dữ liệu hay không và dễ dàng tránh tình trạng truy cập vào biến chưa khởi tạo hoặc đã giải phóng. Tuy nhiên việc sử dụng <code>Optional</code> sai cách cũng có thể khiến cho ứng dụng có những unexpected behaviours. <a href="https://appdecentral.com/2020/09/16/the-danger-of-playing-it-safe/">Bài viết này</a> phân tích một ví dụ về việc khiến app bị crash khi truy cập biến <code>Optional</code> cũng là một giải pháp thay vì việc luôn luôn unwrap biến <code>Optional</code>.</p><h2>Chú ý khi sử dụng <code>extension</code></h2><p><code>extension</code> là một tính năng hữu ích khác của Swift. <code>extension</code> được sử dụng vào nhiều mục đích khác nhau như thêm tính năng vào các kiểu dữ liệu có sẵn, phân chia code thành các thành phần khác nhau, vân vân ... Tuy nhiên việc sử dụng <code>extension</code> cũng cần được cân nhắc kỹ càng vì nó có thể làm phân mảnh mã nguồn, gây khó khăn cho việc tìm hiểu mã nguồn. <a href="https://dmtopolog.com/dark-side-of-extensions/">Bài viết này</a> phân tích một số pitfalls cần tránh khi sử dụng <code>extension</code></p><h1>Mã nguồn:</h1><h2>Làm iOS App Switcher bằng SwiftUI</h2><p>Đây là một mã nguồn demo khá hay, thể hiện được ưu điểm của SwiftUI khi được dùng để làm các animation phức tạp. Các bạn có thể xem mã nguồn <a href="https://github.com/crafterm/swiftui-app-switcher">tại đây</a>.</p><h2>UTM: Máy ảo cho iOS</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/14/utm.png" alt="14"/><p>Nếu các bạn đã quen với Parallel hay VirtualBox trên macOS, thì <a href="https://getutm.app/">UTM</a> có chức năng tương tự nhưng chạy trên iOS. Mã nguồn của UTM được <a href="https://github.com/utmapp/UTM">mở trên github</a></p><h1>Tool:</h1><h2>Tạo nhanh icon cho ứng dụng</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/14/appiconhero.png" alt="14"/><p>Việc tạo icon cho ứng dụng khá là mất thời gian vì chúng ta cần phải cung cấp nhiều hình cho nhiều resolution khác nhau. Trang web <a href="https://appiconhero.co/">appiconhero.co</a> rất hữu ích trong việc tự động tạo các hình này chỉ bằng một tấm hình duy nhất. Đặc biệt là tất cả đều miễn phí.</p><h1>Tips &amp; Tricks:</h1><h2>Xoá nhanh các disabled breakpoints trong Xcode 12</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/14/xcode_delete_breakpoints.png" alt="14"/><p>Xcode 12 có <a href="https://twitter.com/zntfdr/status/1306086993374314496">một option</a> để xoá nhanh các breakpoints đã bị vô hiệu hoá. Rất hữu ích cho việc debuggung app.</p><h2>Lọc nhanh Simulators và Scheme trong Xcode</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/14/xcode_simulators.gif" alt="14"/><p>Sử dụng tính năng lọc nhanh để tìm Simulator hoặc Scheme cần tìm, chi tiết <a href="https://twitter.com/novallkhan/status/1301948845220298753">tại đây</a></p><h2>Test deeplinks và universal links</h2><p>Kiểm thử deeplinks và universal links là một việc không dễ dàng vì nó đòi hỏi app phải được bắt đầu từ background. <a href="https://swiftrocks.com/ui-testing-deeplinks-and-universal-links-in-ios">Bài viết này</a> giới thiệu một phương pháp sử dụng XCUITest đề ở một deeplink từ Safari để kiểm thử, rất hữu ích cho các ứng dụng có nhiều deeplinks.</p><h1>Giới thiệu ứng dụng:</h1><h2>Mojo Cut</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/14/mojo.png" alt="14"/><p><a href="https://apps.apple.com/vn/app/mojo-cut/id1522510649">Mojo Cut</a> là ứng dụng do các lập trình viên Việt Nam phát triển dựa trên dự án <a href="https://github.com/cyrildiagne/ar-cutpaste">cyrildiagne/ar-cutpaste</a>, ứng dụng sẽ hỗ trợ tách nền ảnh, xóa phông ảnh chỉ trong 3 giây ngắn ngủi với thao tác đơn giản ngay trên điện thoại.</p><h1>Lời kết:</h1><p>Hai tuần vừa rồi mình khá bận với công việc mới và việc ổn định cuộc sống ở Singapore nên không có thời gian viết bản tin Swift Việt Nam. Nếu bạn nào có hứng thú muốn tham gia viết bài cùng mình thì có thể liên lạc với mình qua <a href="https://www.facebook.com/groups/691941251234927">group của Swift Việt Nam</a> nhé. Để đảm bảo chất lượng của của bài viết, mình cũng sẽ viết 1 bài mỗi 2 tuần thay vì 1 bài 1 tuần như trước.</p><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC, lập trình iOS và các platform khác của Apple muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/groups/691941251234927">tham gia nhóm thảo luận Swift Việt Nam</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-09-02_ban_tin_swift_vietnam_so_13</guid><title>Bản tin Swift Việt Nam #13</title><description>Bản tin Swift Việt Nam #13</description><link>https://swiftvietnam.com/posts/2020-09-02_ban_tin_swift_vietnam_so_13</link><pubDate>Wed, 2 Sep 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/13/swiftvietnam_13.png" alt="13"/><h1>Bản tin Swift Việt Nam #13</h1><p>Apple tuần vừa rồi tung ra bản iOS 14 beta 6 và rất bất ngờ với phiên bản đầu tiên của iOS 13.7 beta.</p><p>Cuộc chiến giữa Epic Games và Apple tiếp tục leo thang khi Apple đã <a href="https://mjtsai.com/blog/2020/08/28/apple-terminates-epic-games-developer-account/">chính thức xoá tài khoản</a> developer phát hành game Fornite và các tựa đề khác của Epic Games khỏi hệ thống. Apple có vẻ muốn chữa cháy mấy phốt gần đây liên quan đến quá trình kiểm tra ứng dụng nên đã đươc ra <a href="https://developer.apple.com/news/?id=84w3e5bm">thông tin mới</a> về những thay đổi của App Store cũng như khuyến khích mọi người <a href="https://developer.apple.com/contact/app-store/?topic=guideline">đóng góp ý kiến</a> về quá trình kiểm tra app trước khi lên App Store.</p><p>Hiện cộng đồng Swift Việt Nam đang chuẩn bị một hướng dẫn chi tiết cách xây dựng một ứng dụng băng SwiftUI từ lúc ý tưởng cho đến lúc phát hành lên App Store. Hiện mình đang thu thập ý kiến về serie hướng dẫn này trên group của Swift Việt Nam, mời các bạn <a href="https://www.facebook.com/groups/691941251234927">tham gia đóng góp ý kiến nhé</a>.</p><h1>Swift:</h1><h2>Thông tin Swift Evolution Proposals</h2><ul><li>Chấp nhận:<ul><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0287-implicit-member-chains.md">SE-0287</a>: Extend implicit member syntax to cover chains of member references</li><li>Review:</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0288-binaryinteger-ispower.md">SE-0288</a>: Adding isPower(of:) to BinaryInteger</li></ul></li></ul><h2>Reimplement protocol conformance cache with a hash table</h2><p>Đọc qua thông tin trong cái <a href="https://github.com/apple/swift/pull/33487">Pull Request này</a> mình có 2 suy nghĩ:</p><ul><li>Rất vui vì Swift Compiler sẽ chạy nhanh hơn nếu code base có nhiều protocols</li><li>Ai định xin vào làm cho Apple thì xác định luôn là cầy thuật toán nhiều vào 😝.</li></ul><h1>Bài viết:</h1><h2>Sử dụng Vision Framework để track tay và body pose</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/13/handtracking.png" alt="13"/><p>Với việc các vi xử lý trên điện thoại ngày càng mạnh, cũng như các framework hỗ trợ xử lý Machine Learing ngay trên thiết bị như CoreML ngày càng phổ biến và dễ dùng, chúng ta sẽ ngày càng thấy nhiều ứng dụng Machine Learning chạy trực thiết trên điện thoại thông minh của mình. <a href="https://orangeloops.com/2020/08/hand-tracking-body-pose-detection-with-vision-framework">Bài viết này</a> có giới thiệu về Vision Framework của Apple dùng để track tay và body pose, tất cả đều được xử lý ngay trên thiết bị mà không cần kết nối với bất kỳ máy chủ nào.</p><h2>Sử dụng Core Data để cache dữ liệu từ Internet</h2><p>Core Data được sử dụng để lưu trữ và truy cứu dữ liệu trên thiết bị. Caching là kỹ thuật lưu tạm dữ liệu trích xuất từ internet để chúng ta giảm tần suất kết nối với internet cho ứng dụng hoặc cung cấp dữ liệu cho người dùng khi offline. <a href="https://www.donnywals.com/implementing-a-one-way-sync-strategy-with-core-data-urlsession-and-combine/">Bài viết này</a> của Donny Wals có giới thiệu kỹ thuật sync dữ liệu vào Core Data sử dụng <code>URLSession</code> và <code>Combine</code>.</p><h2>Sử dụng hàm như một biến phụ thuộc</h2><p>Đa phần chúng ta đã quen với việc sử dụng Protocol để định nghĩa một biến phụ thuộc và inject protocol này vào ứng dụng. Tuy nhiên việc sử dụng protocol để định nghĩa biến phụ thuộc có nhược điểm là chúng ta phải định nghĩa những biến phục thuộc này rất sớm trong lifecycle của ứng dụng ngay cả khi chung ta không dùng chúng ngay lập tức. <a href="https://itnext.io/functions-as-dependencies-in-swift-2bc382f9475d">Bài viết này</a> có giới thiệu một kỹ thuật sử dụng high-order function để định nghĩa biến phụ thuộc và khởi tạo chúng một cách lazy. Mời các bạn tham khảo nhé.</p><h1>Mã nguồn:</h1><h2>SwiftIO - sử dụng Swift trên vi xử lý</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/13/swiftio.png" alt="13"/><p><a href="https://github.com/madmachineio/SwiftIO">SwiftIO</a> là một dự án nguồn mở nhằm mục đích đưa ngôn ngữ Swift lên vi xử lý, ví dụ như dòng Cortex processors. Nôm na là chúng ta có thể lập trình các board tương tự Arduino bằng ngôn ngữ Swift. Hiện dự án mới hỗ trợ một <a href="https://www.madmachine.io/product-page/swiftio">board duy nhất</a> nhưng mình tin trong tương lai cũng ta sẽ thấy nhiều dòng sản phẩm phần cứng hỗ trợ SwiftiO.</p><h2>Tokamak - Sử dụng Swift để xây dựng ứng dụng Web</h2><p>Mình xin giới thiệu các bạn dự án <a href="https://github.com/TokamakUI/Tokamak">Tomarak</a>, sử dụng Swift để xây dựng ứng dụng Web.</p><p>Tokamak sử dụng SwiftWasm để biên dịch mã Swift sang WebAssembly để hiện thị trên trình duyệt.</p><p>Chúng ta có thể thấy ngôn ngữ Swift rất linh hoạt và có thể sử dụng ở nhiều ứng dụng khác nhau chứ không phải chỉ gói gọn trong Apple ecosystems.</p><h2>Debug trong SwiftUI</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/13/debugging_swiftui.png" alt="13"/><p>Với việc SwiftUI sử dụng Function Bulder khắp mọi nơi, chúng ta không dễ dàng có thể sử dụng <code>print</code> để debug ứng dụng của mình. Anh bạn John Sundell có <a href="https://www.swiftbysundell.com/articles/building-swiftui-debugging-utilities">đề xuất một số giải pháp</a> cho việc sử dụng <code>print</code> để debug ứng dụng SwiftUI bằng cách viết và sử dụng một số hàm debugging riêng.</p><h2>Thư viện kiến trúc luồng dữ liệu một chiều Workflow</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/13/unidirectional.png" alt="13"/><p><a href="https://github.com/square/workflow-swift">Workflow</a> là một thư viện mới, được phát triển bởi Square, dùng để tạo kiến trúc cho ứng dụng với các ưu điểm:</p><ul><li>Sử dụng State Machine để thay đổi UI và Navigation</li><li>Composition và Scaling</li><li>Tách biệt giữa code cho business logic và UI.</li></ul><p>Đặc biệt là thư viện này có cả phiên bản <a href="https://github.com/square/workflow-kotlin">viết bằng Kotlin</a>, hỗ trợ Android. Điều này giúp cho việc chia sử cấu trúc giữa Android và iOS app dễ dàng hơn.</p><p>Các bạn có thể xem qua bài giới thiệu về Workflow tại <a href="https://player.vimeo.com/video/362741019">video này</a></p><h1>Tool:</h1><h2>snip - Quản lý snippets</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/13/snips.png" alt="13"/><p><a href="https://github.com/Pictarine/macos-snippets">Dự án mã mở "Snip"</a> là một phần mềm chạy trên macOS dùng để quản lý các mẩu code thường dùng trên macOS. Toàn bộ mã nguồn được viết bằng SwiftUI và Combine, hỗ trợ syntax highlight hơn 100 ngôn ngữ khác nhau, hỗ trợ viết bằng Markdown và HTML và nhiều tính năng khác, mời các bạn tham khảo.</p><h1>Tips &amp; Tricks:</h1><h2>Navigation trong Xcode 12</h2><p>Xcode 12 có rất nhiều sự thay đổi trong việc quản lý tabs. Bạn có thể <a href="https://samwize.com/2020/08/21/navigating-xcode-12-and-tabs">tham khảo bài viết này</a> để xem cách sử dụng các phím tắt đề navigate giữa các file source</p><h2>Markdown Playgrounds for Swift</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/13/markdown_playgrounds.png" alt="13"/><p><a href="https://github.com/objcio/markdown-playgrounds">Markdown Playgrounds</a> là một ứng dụng nguồn mở, được phát triển bời <a href="https://www.objc.io/">objc.io</a>. Markdown Playgrounds hoạt động tương tự như Swift Playground, hoạt động đơn giản hơn và chúng ta không cần phải sử dụng Xcode cồng kềnh chỉ để thử nghiệm code Swift.</p><h1>Giới thiệu ứng dụng</h1><h2>Not Phở by <a href="https://twitter.com/linhbouniol">@linhbouniol</a></h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/13/notpho.gif" alt="13"/><p>Not phở là một ứng dụng mới phát hình của bạn <a href="https://twitter.com/linhbouniol">@linhbouniol</a>. Mục đích của ứng dụng là giới thiệu những món ăn Việt Nam khác, ngoài Phở với tất cả các bạn bè quốc tế. Ngoài việc nội dung rất hay, ứng dụng cũng có những hiệu ứng chuyển động được làm rất tỉ mỉ.</p><p>Các bạn có thể tải "Not Phở" <a href="https://apps.apple.com/app/apple-store/id1525104124">tại đây nhé</a>.</p><h1>Hài hước:</h1><p>Không ngờ có cả một câu chuyện drama đằng sau <a href="https://twitter.com/skepholic/status/1296865027941478400?s=20">cái meme nổi tiếng này</a> 😭🤣.</p><h1>Lời kết:</h1><p>Từ số này mình có bổ sung thêm mục Tips &amp; Trick cũng như mục giới thiệu ứng dụng của lập trình viên người Việt. Nếu các bạn có thông tin gì hay muốn giới thiệu app iOS của mình đến mọi người thì có thể gửi một issue lên <a href="https://github.com/SwiftVietnam/SwiftVietnam">repo của Swift Việt Nam</a> nhé.</p><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC, lập trình iOS và các platform khác của Apple muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/groups/691941251234927">tham gia nhóm thảo luận Swift Việt Nam</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-08-26_ban_tin_swift_vietnam_so_12</guid><title>Bản tin Swift Việt Nam #12</title><description>Bản tin Swift Việt Nam #12</description><link>https://swiftvietnam.com/posts/2020-08-26_ban_tin_swift_vietnam_so_12</link><pubDate>Wed, 26 Aug 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/12/swiftvietnam_12.png" alt="12"/><h1>Bản tin Swift Việt Nam #12</h1><p>Cuộc chiến giữa Epic Games và Apple có vẻ vẫn chưa đến hồi kết khi Apple <a href="https://www.cnbc.com/2020/08/17/epic-games-says-apple-threatened-to-revoke-developer-account.html">doạ sẽ cắt tài khoản Apple Developer của Epic Games</a>, còn Epic Games thì <a href="https://techcrunch.com/2020/08/17/epic-games-apple-injunction/">tiếp tục kiện Apple</a> ra toà và <a href="https://www.theverge.com/2020/8/25/21400240/epic-apple-ruling-unreal-engine-fortnite-temporary-restraining-order">doạ cắt hỗ trợ iOS khỏi Unreal Engine</a>. <a href="https://www.androidpolice.com/2020/08/23/apple-says-it-will-cut-off-epic-games-from-ios-development-impacting-fortnite-and-unreal-engine-software/">Microsoft</a> và <a href="https://www.theverge.com/2020/8/14/21369169/facebook-paid-live-events-ios-android-apple-app-store-fees-fortnite-epic">Facebook</a> cũng ăn hôi nhẩy vào bênh vực Epic Games một phần vì Apple cũng từ chối cho <a href="https://www.theverge.com/2020/8/5/21356274/microsoft-xcloud-ios-apple-iphone-ipad-testing-ends-apple-app-store-policies">Microsoft</a> và <a href="https://www.theverge.com/2020/8/7/21358355/facebook-apple-app-store-policies-comments-facebook-gaming-ios">Facebook</a> phát hành app games của riêng họ trên Apple Store. Apple tuần vừa rồi cũng dính thêm một phốt khác là việc <a href="https://www.theverge.com/2020/8/21/21396316/apple-wordpress-in-app-purchase-tax-update-store">từ chối cho Automattic cập nhật app Wordpress</a> của họ và bắt họ phải cung cấp In-App-Purchase, sau đó Apple đã<a href="https://www.theverge.com/2020/8/22/21397424/apple-wordpress-apology-iap-free-ios-app"> phải xin lỗi</a> và cho phép Automattic cập nhật app Wordpress mà không cần IAP. Nhận định của mình là dù ai thắng thua trong cuộc chiến thương mại này, tương lai của App Store và In App Purchase sẽ có rất nhiều sự thay đổi.</p><h1>Swift:</h1><h2>Thử nghiệm App Clip trên Testflight</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/12/appclips.jpg" alt="12"/><p><a href="https://developer.apple.com/news/releases/?id=08182020">Apple đã cập nhật Testflight</a> và cho phép chúng ta có thể thử nghiệm tính năng App Clip. Bản cập nhật này cũng trình làng <a href="https://developer.apple.com/assets/elements/icons/testflight/testflight-128X128_2x.png">một icon mới</a> cho app Testflight. Thông tin thêm về bản cập nhật này <a href="https://9to5mac.com/2020/08/17/apples-testflight-ios-beta-distribution-app-updated-with-detailed-icon-fit-for-a-mac/">tại đây</a>.</p><h2>Tìm hiểu <code>OptionSet</code></h2><p><a href="https://developer.apple.com/documentation/swift/optionset"><code>OptionSet</code></a> là một Protocol khá thú vị, đặc biệt hữu ích khi chúng ta muốn định nghĩa configurations cho một API nào đó vì các configuration có thể kết hợp với nhau. Bạn có thể tham khảo một bài viết thảo luận về <code>OptionSet</code> <a href="https://www.donnywals.com/understanding-swifts-optionset/">tại đây</a>.</p><h1>Bài viết:</h1><h2>Kiểm thử Deeplink tự động bằng UI Testing</h2><p>Deep-Linking là một thành phần không thể hiệu trong các mobile app hiện nay. Tuy nhiên việc kiểm thử Deeplink không phải là chuyện dễ dàng và thường phải làm một cách thủ công. Từ iOS 13, Apple đã hỗ trợ và mở rộng iOS Simulator rất nhiều để giúp cho việc kiểm thử Deeplink dễ dàng hơn. Bạn có thể tham khảo <a href="https://masilotti.com/test-deep-links-with-ui-testing/">bài viết này</a> để xem cách kiểm thử Deeplink một cách tự động nhé.</p><h2>Tips phát triển Widget cho iOS 14</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/12/widgets.png" alt="12"/><p>Widgets là một feature mới xuất hiện trong iOS 14. Với việc các lập trình viện hiện đang rất nóng lòng adopt Widget cho app của mình, mình xin giới thiệu một <a href="https://medium.com/swlh/10-tips-on-developing-ios-14-widgets-f17b865fbdbc">bài viết</a> có liệt kê các tips và tricks hay trong việc lập trình widgets, mời các bạn tham khảo nhé.</p><h1>Mã nguồn:</h1><h2>Thư viện phát hiện memory leak</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/12/memoryleak.png" alt="12"/><p>Mặc dù Swift đã hỗ trợ việc quản lý bộ nhớ tự động rất tốt, chúng ta vẫn cần phải cẩn trọng khi viết code để tránh bị memory leak, đặc biệt là tránh việc có retain cycles.</p><p>Bạn <a href="https://www.facebook.com/quangmin91">@Đào Duy Quang</a> có thảo luận về vấn đề này trong bài <a href="https://medium.com/ne-digital/memory-leak-detection-in-runtime-on-ios-cb4193f185fb">blog gần đây</a>.</p><p>Bạn Quang cũng có phát hành một thư viện mã nguồn mở để kiểm tra Memory Leak <a href="https://github.com/duyquang91/leakdetector">tại đây</a>.</p><h2>AltStore - Sideload apps mà không cần Jailbreak</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/12/altstore.png" alt="12"/><p>AltStore là một thư viện app dành cho các máy chạy iOS mà không cần phải Jailbreak. AltStore sử dụng Certificate và Provisioning Profiles của chính bạn để resign các app (từ file ipa) và sideload nó lên máy iOS của bạn. Bạn có thể tham khảo mã nguồn của AltStore <a href="https://github.com/rileytestut/AltStore">tại đây</a>.</p><h2>Arial - Screensaver cho Mac</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/12/aerial.gif" alt="12"/><p>Nếu bạn đã phải trầm trồ khi xem các ảnh screensaver trên Apple TV thì bạn có thể sử dụng <a href="https://github.com/JohnCoates/Aerial">Aerial</a> để có thể xem các screensaver tương tự trên máy Mac của mình.</p><h2>Thư viện hiệu ứng chuyển động SwiftUI Animation</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/12/swiftui-animation.gif" alt="12"/><p>Một lợi thế của SwiftUI so với UIKit đó là việc tạo hiệu ứng chuyển động rất dễ dàng. Bạn có thể tham khảo repo <a href="https://github.com/Shubham0812/SwiftUI-Animations">SwiftUI-Animations</a> để có cảm hứng cũng như tham khảo cách tạo hiệu ứng chuyển động tương tự trong các app phổ biến nhé.</p><h1>Tool:</h1><h2>Sử dụng Xcode Search như một Todo list</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/12/xcode-todo.gif" alt="12"/><p>Tip này khá hay. Khi bạn tìm kiếm trong Xcode, bạn có thể sử dụng danh sách trả về như một todo list như <a href="https://twitter.com/lickability/status/1294295481812750336?s=20">ở đây</a>.</p><h2>Bạn tốn bao nhiêu thời gian chờ Xcode chạy code?</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/12/xcode-buildtime.png" alt="12"/><p>Sử dụng <a href="https://blog.kulman.sk/xcode-build-times/">tool này</a>, bạn có thể đo được thời gian bạn chờ Xcode build code của bạn. Không có gì thiết thực lắm nhưng cũng khá thú vị.</p><h1>Hài hước:</h1><p>Không biết thông tin này đáng cười hay đáng khóc 😂, nhưng Adobe vừa làm <a href="https://www.macrumors.com/2020/08/20/adobe-lightroom-ios-update-photos-deleted/">mất hoàn toàn ảnh của người dùng</a> trong bản cập nhật mới của Lightroom.</p><h1>Lời kết:</h1><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC, lập trình iOS và các platform khác của Apple muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/groups/691941251234927">tham gia nhóm thảo luận Swift Việt Nam</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-08-19_ban_tin_swift_vietnam_so_11</guid><title>Bản tin Swift Việt Nam #11</title><description>Bản tin Swift Việt Nam #11</description><link>https://swiftvietnam.com/posts/2020-08-19_ban_tin_swift_vietnam_so_11</link><pubDate>Wed, 19 Aug 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/11/swiftvietnam_11.png" alt="11"/><h1>Bản tin Swift Việt Nam #11</h1><p>Có lẽ tin tức nổi bật nhất liên quan đến Apple trong tuần vừa rồi là cuộc chiến pháp lý giữa Apple và Epic games, nhà phát hành trò chơi Fortnite nổi tiếng. Vấn đề liên quan đến việc Apple bắt buộc mọi nhà phát hành trên Apple Store chỉ được sử dụng In-App-Purchases để bán nội dụng trong apps, Apple sẽ lấy 30% giá bán. Epic games thấy việc đó là không hợp lý và cho người dùng mua tiền ảo trong game Fortnite bằng cách trả tiền trực tiếp bằng thẻ tín dụng. Apple ngay sau đó đã xoá game Fortnite khỏi Apple Store và doạ đóng tài khoản phát hành của Epic Games. Epic Games cũng đáp trả lại bằng cách kiện Apple độc quyền. Cuộc chiến pháp lý này chắc chắn sẽ ảnh hưởng rất nhiều đến tương lại của Apple App Store, dù cho ai thắng ai thua đi nữa. Mình không có bình luận gì cho việc này vì mình thấy pros và cons của cả 2 bên.</p><h1>Swift:</h1><h2>Bài phỏng vấn anh Chris Lattner về máy học</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/11/chris.png" alt="11"/><p>Anh Chris Lattner, cha đẻ của ngôn ngữ Swift, đã từng làm việc 2 năm ở Google cho dự án liên quan đến máy học <a href="https://www.tensorflow.org/swift">Swift for Tensorflow</a>. Mới đây anh Chris có một bài phỏng vấn về mối liên hệ giữa ngôn ngữ lập trình, trình compiler và máy học. Nếu các bạn có hứng thú với chủ đề khá hóc búa này, mời các bạn xem video bài phỏng vấn <a href="https://www.youtube.com/watch?v=QeG9bdkc3Lk">tại đây</a> nhé.</p><h2>Sử dụng Swift với AWS Lambda</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/11/aws_lambda.png" alt="11"/><p>Trong số #, mình có giới thiệu về việc AWS Lambda đã hỗ trợ Swift. Trong số này, mình giới thiệu với các bạn <a href="https://fabianfett.de/swift-on-aws-lambda-creating-your-first-http-endpoint">bài viết chi tiết</a> để tạo ra một HTTP Endpoint bằng Swift chạy trên AWS Lambda.</p><h1>Bài viết:</h1><h2>Feather CMS</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/11/feather.png" alt="11"/><p>Nếu các bạn chán sử dụng Swift để viết apps rồi thì các bạn có thể bắt đầu tìm hiểu Server Side Swift, sử dụng Swift như một ngôn ngữ lập trình cho máy chủ. Vapor có lẽ là thư viện phổ biến nhất để tạo các ứng dụng máy chủ bằng Swift hiện nay. Feather CMS là một content management system được xây dựng dựa trên Vapor 4.0 để tạo các trang web quản lý nội dung. Các bạn có thể đọc bài giới thiệu về Feather tại <a href="https://theswiftdev.com/getting-started-with-feather-cms/">website của tác giả</a> nhé.</p><h2>Quản lý kết nối internet cho iOS apps</h2><p>Chúng ta chắc ai cũng đã từng vò đầu bứt tai làm phần networking cho apps của mình. Logic để kiểm tra khả năng kết nối của thiết bị với internet rất phức tạp và đòi hỏi lập trình viên phải rất cẩn thận. Mình xin giới thiệu <a href="https://www.vadimbulavin.com/network-connectivity-on-ios-with-swift/">bài viết này</a> có tổng hợp các best practices cho việc xử lý việc kiểm tra kết nối internet cho iOS app.</p><h2>Tinh chỉnh iOS Simulator</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/11/simulator.png" alt="11"/><p>Similator cung cấp bởi Xcode là một công cụ không thể thiếu trong quá trình làm apps. Xcode có cung cấp lệnh <code>simctl</code> để điều khiển các simulator từ dòng lệnh. Có rất nhiều công cụ được xây dựng dựa trên <code>simctl</code> để giúp ích cho việc tương tác với simulator. Thông tin cụ thể về <code>simctl</code> các bạn có thể xem chi tiết trong <a href="https://developer.apple.com/videos/play/wwdc2020/10647/">WWDC video: Become a Simulator expert</a>.</p><p>Bài viết <a href="https://curvedlayer.com/2020/08/09/ios-simulator-plugin-simctl.html">Hacking iOS Simulator with simctl and dynamic libraries</a> cung cấp một số hacks nâng cao để giúp chúng ta inject code vào simulator và thay đổi các thành phần hệ thống của Simulator, ví dụ như homescreen của simulator (còn gọi là SpringBoard).</p><h1>Mã nguồn:</h1><h2>Parma - hiển thị Markdown bằng SwiftUI</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/11/parma.jpg" alt="11"/><p><a href="https://github.com/dasautoooo/Parma">Parma</a> là một thư viện mới được phát hành dùng để xử lý và hiển thị Markdown bằng các components của SwiftUI. <a href="https://en.wikipedia.org/wiki/Markdown">Markdown</a> là một markup-language rất phổ biến để viết formatted texts, được sử dụng rất nhiều ví dụ trên <a href="https://guides.github.com/features/mastering-markdown/">Github</a>.</p><h2>SwiftUI-Introspect - tinh chỉnh SwiftUI</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/11/introspect.png" alt="11"/><p>Một trong những điểm mạnh của SwiftUI là với chỉ một vài dòng code, chúng ta có thể dễ dàng xây dựng được các giao diện phức tạp. Tuy nhiên đây cũng là điểm yếu của SwiftUI khi chúng ta muốn tinh chỉnh một số thành phần UI của SwiftUI vì Apple không cho lập trình viên can thiệp sâu vào các thành phần bên trong của SwiftUI. Rất may, nhờ có thư viện <a href="https://github.com/siteline/SwiftUI-Introspect">SwiftUI-Introspect</a>, chúng ta có thể khám xét cấu trúc giao diện của app trong runtime, và tinh chỉnh các thành phần giao diện như chúng ta mong muốn. Điểm yếu là thư viện này là nó phụ thuộc vào cách Apple xây dựng các components cho SwiftUI, và điều này có thể thay đổi trong mỗi phiên bản SwiftUI khác nhau, thế nên các bạn nên cẩn thận khi sử dụng SwiftUI-Instropect trong apps của mình.</p><h2>swift-doc - tạo documentation cho các dự án Swift</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/11/swiftdoc.png" alt="11"/><p>Viết documentation cho code là công việc cần thiết, đặc biết nếu chúng ta làm việc trong nhóm hoặc chia sẻ code với mọi người. Hiên <a href="https://github.com/realm/jazzy">jazzy</a> là công cụ rất phổ biến để tạo documentation cho các mã nguồn trên Apple platform. Anh bạn <a href="https://nshipster.com/">Mattt</a> có tạo ra một thư viện mới để tạo documentation cho các dự án Swift, có tên là swift-doc: https://github.com/SwiftDocOrg/swift-doc. <code>swift-doc</code> có khả năng tạo HTML hoặc Markdown documents, dễ dàng cho việc phát hành lên web.</p><h2>ToggleUI - Feature Toggle cho SwiftUI</h2><p><a href="https://github.com/ilyapuchka/ToggleUI">ToggleUI</a> là một thư viện mới giúp cho việc quản lý feature toggles cho các dự án SwiftUI một cách dễ dàng. Điểm mạnh của thư viện này là sử dụng Property Wrapper, giúp cho việc sử dụng các feature flags dễ dàng như một biến boolean, cùng với việc tự động tạo debug UI, giúp cho việc bật/tắt và debug các features dễ dàng hơn.</p><h1>Tool:</h1><h2>CheatSheet - tìm nhanh phím tắt</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/11/cheatsheet.png" alt="11"/><p><a href="https://mediaatelier.com/CheatSheet/">CheatSheet</a> là một phần mềm miễn phí cho Mac để tìm nhanh các phím tắt cho tất cả các apps. Bạn chỉ ấn phím <code>⌘</code> khi đang sử dùng bất kỳ app nào trên Mac, một bảng danh sách sẽ hiện lên với hiển thị tất cả các phím tắt trong app hiện tại, rất thuận tiện cho việc sử dụng bàn phím thay vị chuyển sang dùng chuột.</p><h1>Hài hước:</h1><p>Nếu bạn có ý định <a href="https://twitter.com/aalonso128/status/1293418352023613440">debug Swift compiler</a> 😨</p><h1>Lời kết:</h1><p>Mình hiện đã relocated về Singapore, gần về địa lý với Việt Nam hơn và cũng gần múi giờ ở Việt Nam hơn nên sẽ có nhiều điều kiện để trao đổi với các bạn yêu thích Swift ở Việt Nam hơn.</p><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC, lập trình iOS và các platform khác của Apple muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/groups/691941251234927">tham gia nhóm thảo luận Swift Việt Nam</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-08-12_ban_tin_swift_vietnam_so_10</guid><title>Bản tin Swift Việt Nam #10</title><description>Bản tin Swift Việt Nam #10</description><link>https://swiftvietnam.com/posts/2020-08-12_ban_tin_swift_vietnam_so_10</link><pubDate>Wed, 12 Aug 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/10/swiftvietnam_10.png" alt="10"/><h1>Bản tin Swift Việt Nam #10</h1><p>Bài viết này đánh dấu bài viết thứ 10 cho bản tin Swift. Mình rất cảm ơn mọi người đã ủng hộ cho các bài viết trước. Mình hiện có một số ý tưởng để nâng cao chất lượng cho các bài viết trong tương lại, các bạn đón chờ nhé.</p><p>Điểm qua tin tức tuần vừa rồi: các phiên bản Beta 4 cho Xcode, iOS, iPadOS, tvOS, watchOS và macOS đã được phát hành. Apple tiếp tục mang một số tính năng mới trong các phiên bản beta mới này. Một thông tin thú vị là Swift cũng đã tròn 10 tuổi.</p><h1>Swift:</h1><h2>Swift 10 tuổi</h2><p>Swift được giới thiệu tới cộng đồng Apple Developer trong WWDC 2014, nhưng Chris Lattner đã phát triển Swift từ trước đó lâu rồi, với cái tên là "Shiny". Tuần vừa rồi, anh Chris đã thông báo sự kiện <a href="https://twitter.com/clattner_llvm/status/1284156940747042817">trên Twiter</a>, đánh dấu 10 năm kể từ <a href="https://github.com/apple/swift/commit/18844bc65229786b96b89a9fc7739c0fc897905e">commit đầu tiên</a> vào dự án Swift.</p><p>Nếu các bạn muốn tìm hiểu thêm về lịch sử phát triển Swift, mình recommend các bạn xem video anh Paul Hudson phỏng vấn Chris Latter <a href="https://www.youtube.com/watch?v=OAaQhW4ifu0">tại đây</a> nhé.</p><h2>Swiftʼs Collection Types</h2><p><a href="https://docs.swift.org/swift-book/LanguageGuide/CollectionTypes.html">Collection Types</a>, bao gồm Array, Set, Dictionary là các kiểu ứng dụng cơ bản có trong Swift Standard Library. Hiểu về các kiểu dữ liệu này có vai trò quan trọng trông việc chọn kiểu dữ liệu thích hợp cho data models. Các kiểu dữ liệu collection này thường conform một số protocol nhất định. Bạn Harshil có một bài viết giải thích khá cặn kẽ các protocol cơ bản liên quan đến Collection Types trong Swift. Các bạn tham khảo bài viết [ở đây nhé] (https://harshil.net/blog/swift-sequence-collection-array).</p><h2>What's new in Swift 5.3 podcast</h2><p>John Sundell thảo luận cùng với anh JP Simard về các tính năng mới trong Swift 5.3 được giới thiệu trong WWDC 2020 trong <a href="https://www.swiftbysundell.com/podcast/78/">podcast mới nhất</a>. Các bạn cũng có thể xem lại overview những điểm mới trong Swift trên <a href="https://developer.apple.com/videos/play/wwdc2020/10170/">WWDC video này</a>, hoặc trên trang web <a href="https://www.whatsnewinswift.com/?from=5.2&to=5.3">What's new in Swift?</a></p><h2>Kitura trở thành một dự án cộng đồng</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/10/kitura.png" alt="10"/><p>Nếu các bạn theo dõi Swift on Server thì chắc đã biết là IBM đã từ bỏ phát triển tiếp Kitura từ năm ngoái. Hiện chỉ còn Vapor là dự án open source, vẫn đang được phát triển tiếp để deploy Swift như một ngôn ngữ server-side. IBM vừa thông báo tuần vừa rồi là họ sẽ chuyển quyền sở hữu Kitura cho cộng đồng. Như vậy chúng ta sẽ có thêm nhiều framework để lựa chọn hơn khi muốn sử dụng Swift trên server. Thông tin chi tiết <a href="https://forums.swift.org/t/kitura-is-now-a-community-project/39199">tại đây</a>.</p><h1>Bài viết:</h1><h2>Kiểm tra tính xác thực của App bằng DeviceCheck và Attest API</h2><p>Nếu bạn phát triển các ứng dụng thương mại, hoặc có In-App-Purchase và hoặc muốn chống lại các hình thức hack để truy cập vào những tính năng premium của app, hoặc ngăn chặn app chạy trên các thiết bị bị jailbroken, các bạn có thể sử dụng <a href="https://developer.apple.com/documentation/devicecheck">framework DeviceCheck</a> miễn phí của Apple để kiểm tra tính xác thực của app của mình trên device của users. Việc kiểm tra này đảm bảo là phiên bản app của bạn trên thiết bị của user không bị chỉnh sửa hay decompile. Trong iOS 14, Apple đã cập nhật framework DeviceCheck này, <a href="https://developer.apple.com/news/?id=2sngpulc">bổ xung thêm Attest API</a> để tăng tính bảo mật cho việc kiểm tra tính xác thực của ứng dụng.</p><p>Để hiểu thêm Attest API này hoạt động thế nào, các bạn có thể tham khảo <a href="https://macsecurity.net/view/409-apple-is-stepping-up-app-verification-through-new-app-attest-api">bài viết này</a>.</p><p>Các bạn cũng có thể tham khảo chi tiết cách sử dụng Attest API tại <a href="https://swiftrocks.com/app-attest-apple-protect-ios-jailbreak">bài viết này</a>.</p><h2>Xây dựng ứng dụng đa nền tảng bằng SwiftUI</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/10/hackernews.png" alt="10"/><p>Một trong những cải tiến mới nhất trong SwiftUI ở WWDC 2020 là việc hỗ trợ phát triển các app đa nền tảng. Về lý thuyết, chúng ta có thể sử dụng cùng 1 codebase để xây dựng ứng dụng cho tất cả các nền tảng của Apple. Trang fritz.ai có giới thiệu một bài viết hướng dẫn xây dựng một client cho trang <a href="https://news.ycombinator.com/">HackerNews</a> cho iOS, iPadOS và macOS cùng một lúc dựa trên một codebase duy nhất. Các bạn tham khảo <a href="https://heartbeat.fritz.ai/building-a-multi-platform-app-with-swiftui-5336bce94689">bài viết tại đây nhé</a>.</p><h2>Kiến trúc giống Redux cho SwiftUI</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/10/redux.png" alt="10"/><p>Nếu các bạn đã từ làm việc với ReactJS, chắc hẳn các bạn đã quen với kiến trúc Redux để quản lý state của web app. Với việc SwiftUI hoạt động khá giống ReactJS, chúng ta cũng có thể kết hợp kiến trúc này với SwiftUI để quản lý state cho iOS apps. Anh bạn Daniel Bernal có một series bài viết để hướng dẫn bạn sử dụng một kiến trúc kiểu Redux trong ứng dụng iOS viết bằng SwiftUI. Các bạn có thể tham khảo các phần bài viết tại đây: - <a href="https://danielbernal.co/redux-like-architecture-with-swiftui-basics/">Basics</a> - <a href="https://danielbernal.co/redux-like-architecture-with-swiftui-middleware">Side Effects</a> - <a href="https://danielbernal.co/redux-like-architecture-with-swiftui-error-handling/">Error Handling</a></p><p>Anh bạn <a href="https://swiftwithmajid.com/">Majid</a> cũng có một series bài viết tương tự: - <a href="https://swiftwithmajid.com/2019/09/18/redux-like-state-container-in-swiftui/">Basics</a> - <a href="https://swiftwithmajid.com/2019/09/25/redux-like-state-container-in-swiftui-part2/">Best practices</a> - <a href="https://swiftwithmajid.com/2019/10/02/redux-like-state-container-in-swiftui-part3/">Container Views</a></p><h2>Self-Sizing UITableView Cells with SwiftUI</h2><p>Bài viết của bạn Noah Gilmore khá thú vị khi bạn đó đã tìm hiểu cách tích hợp một <code>SwiftUI View</code> vào làm content cho một <code>UITableViewCell</code>. Thách thức ở đây là làm sao chúng ta có thể kết hợp <code>SwiftUI</code> và <code>UITableViewCell</code> để hiển thị dữ liệu động, các cell không có chiều cao cố định. Các bạn tham khảo bài <a href="https://noahgilmore.com/blog/swiftui-self-sizing-cells/">phân tích tại đây nhé</a>.</p><h2>Step-by-step guide for localizing plurals in iOS</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/10/plural.png" alt="10"/><p>Nếu các bạn đã từng xây dựng các ứng dụng có giao diện tiếng anh, chắc hẳn các bạn đã từng gặp vấn đề với việc phải hỗ trợ các danh từ số ít, số nhiều trong tiếng anh tuỳ thuộc vào ngữ cảnh, ví dụ như nếu bạn phải thiết kế một <code>UILabel</code> có title là "x day(s)" thì tuỳ thuộc vào <code>x = 1</code> hay <code>x &gt; 1</code>, các bạn sẽ phải sử dụng <code>day</code> hoặc <code>days</code>. Rất may Apple có hỗ trợ việc localizing plurals này trực tiếp trong Xcode. Các bạn có thể xem hướng dẫn từng bước việc sử dụng plurals localization tại <a href="https://www.tanaschita.com/posts/20200801-plurals-localization-in-ios/">bài viết này nhé</a>.<br><br># Mã nguồn:</p><h2>SwiftDB</h2><p>Nếu bạn sử dụng CoreData với SwiftUI, các bạn có thể sử dụng <a href="https://github.com/vmanot/SwiftDB">SwiftDB</a> để đơn giản hoá việc tích hợp giữa CoreData và SwiftUI. SwiftDB cung cấp nhiều Property Wrappers liên quan đến CoreData để giảm thiểu các boilerplate code liên quan đến CoreData, giúp cho việc sử dụng CoreData với SwiftUI đơn giản hơn.</p><h1>Tool</h1><h2>IndieApps - Airport Community</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/10/airport.png" alt="10"/><p>Có rất nhiều iOS app hay hiện được tác giả của họ phát hành trên Testflight. Việt tìm và phát hiện các app này khá khó khăn vì Apple không có một App Store nào dành cho Testflight app. Mình cũng có một ý tưởng tạo ra một Testflight App Store và có phát triển một ứng dụng nguồn mở có tên là <a href="https://antranapp.github.io/IndieApps/">IndieApps</a>. Tình cờ anh bạn <a href="https://twitter.com/jsngr">Jordan Singer</a> cũng phát triển một ứng dụng tương tự có tên là <a href="https://airport.community/">Airport</a>. Các bạn có thể sử dụng các platforms này để dùng thử các app iOS mới hoặc để tìm tester cho các ứng dụng của chính bản thân mình nhé.</p><h1>Lời kết:</h1><p>Mình hiện đã relocated về Singapore, gần về địa lý với Việt Nam hơn và cũng gần múi giờ ở Việt Nam hơn nên sẽ có nhiều điều kiện để trao đổi với các bạn yêu thích Swift ở Việt Nam hơn.</p><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC và muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/tran.binhan">kết nối với mình</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-07-29_ban_tin_swift_vietnam_so_9</guid><title>Bản tin Swift Việt Nam #9</title><description>Bản tin Swift Việt Nam #9</description><link>https://swiftvietnam.com/posts/2020-07-29_ban_tin_swift_vietnam_so_9</link><pubDate>Wed, 29 Jul 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/9/swiftvietnam_9.png" alt="9"/><h1>Bản tin Swift Việt Nam #9</h1><p>Tuần vừa rồi Apple đã phát hành Beta 3 cho Xcode 12, iOS và iPadOS với một số APIs mới. Apple cũng đã opensource thư viện Exposure Notification. Thư viện này được các nước trên thế giới sử dụng để xây dựng các app contac tracing giúp cho công việc chống lại COVID-19. Mình có tìm hiểu ở Việt Nam có app <a href="https://www.bluezone.gov.vn/">Bluezone</a> được phát triển bởi BKAV lại không dùng thư viện này. Rất mong các phiên bản tiếp theo của Bluezone sẽ được cập nhật để sử dụng thư viện này vì nó được hỗ trợ trực tiếp từ Apple. Bản thân mình cũng đang tham gia một dự án liên quan đến thư viện này nên mình rất ủng hộ việc sử dụng Exposure Notification Framework. Tuy nhiên điểm yếu của việc này là chỉ có máy cài được iOS 13 trở lên mới sử dụng được Exposure Notification Framework.</p><h1>Swift:</h1><h2><code>async</code> keyword</h2><p>Ai viết C# hoặc Javascript chắc quen với keyword async, await rồi. Với async, await, các code concurrency sẽ dễ viết hơn và logic sẽ dễ hiểu hơn. 👉 Trên Github của Swift vừa có <a href="https://github.com/apple/swift/pull/33147">một PR</a> để giới thiệu keyword async cho Swift 👉 Anh Lattner cũng đã từng có bài Swift Concurrency Manifesto từ 3 năm trước, trong đó nhắc đến async và await <a href="https://gist.github.com/lattner/31ed37682ef1576b16bca1432ea9f782">tại đây</a></p><h2>Mã nguồn mở Exposure Notification Framework</h2><p>Apple đã cung cấp <a href="https://developer.apple.com/exposure-notification/">mã nguồn</a> của <a href="https://developer.apple.com/documentation/exposurenotification">Exposure Notification Framework</a> để mọi người tham khảo. Điểm đặc biệt là mã nguồn được viết bằng Objective-C 😃.</p><h1>Bài viết:</h1><h2>Sử dụng OSLog</h2><p>Với lập trình viên chúng ta, việc có logging data từ các app chúng ta viết là việc cực kỳ quan trong, không chỉ giúp ích cho việc tìm bugs mà còn giúp cho chúng ta hiểu được hành vi của người dùng. Với việc Apple <a href="https://developer.apple.com/app-store/user-privacy-and-data-use/">thắt chặt các quyền riêng tư trên iOS 14</a>, việc sử dụng các frameworks như Firebase Craslytics/Firebase Analytics/Sentry sẽ khó khăn hơn. Một giải pháp cho việc này là sử dụng các thành phần có sẵn của hệ điều hành như <a href="https://developer.apple.com/documentation/os/oslog">OSLog</a> hay <a href="https://developer.apple.com/documentation/metrickit">MetricKit</a>. Trang <a href="https://www.avanderlee.com/debugging/oslog-unified-logging/">SwiftLee</a> có giới thiệu về cách sử dụng OSLog <a href="https://www.avanderlee.com/debugging/oslog-unified-logging/">tại đây</a>. Thông tin về <a href="https://developer.apple.com/documentation/metrickit">MetricKit</a>, các bạn có thể xem trực tiếp từ <a href="https://developer.apple.com/videos/play/wwdc2020/10081/">WWDC video này</a>.</p><h2>Sử dụng CoreData với SwiftUI trong Xcode 12</h2><p>Nếu các bạn tạo project SwiftUI mới trong Xcode 12, các bạn sẽ không thấy <code>AppDelegate</code> hay <code>SceneDelegate</code> nữa, gây khó khăn cho việc thiết lập <code>CoreData</code>. Donny Wals có giới thiệu một cách để các bạn thiết lập CoreData và kết nối nó với phần UI <a href="https://www.donnywals.com/using-core-data-with-swiftui-2-0-and-xcode-12/">tại đây</a>.</p><h2>Thêm resources vào Swift Package Manager</h2><p>Từ Xcode 11, chúng ta có thể sử dụng Swift Package Manager, nhưng nó chỉ hỗ trợ các package chỉ có source code (tức là không có resource như hình ảnh, tập tin không phải Swift hay Objective-C). Từ Xcode 12, SPM đã hỗ trợ việc thêm các resources này vào package. Bạn có thể xem hướng dẫn chi tiết cách thêm và sử dụng resources trong SPM <a href="https://useyourloaf.com/blog/add-resources-to-swift-packages/">tại đây</a>.</p><h1>Mã nguồn:</h1><h2>RSS Reader NetNewsWire</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/9/netnewswire.png" alt="9"/><p><a href="https://github.com/Ranchero-Software/NetNewsWire">NetNewsWire</a> là một ứng dụng RSS Reader mã nguồn mở dành cho tất cả các Apple platforms. Một điều thú vị là các maintainer của ứng dụng đã quyết định chuyển sang dùng SwiftUI. Đây là cơ hội tuyệt vời để các bạn học SwiftUI được mang những kỹ năng của mình ứng dụng vào thự tế, và vừa đóng góp được cho một úng dụng nguồn mở hay. Chi tiết về việc học SwiftUI với ứng dụng NetNewsWire <a href="https://blog.rizwan.dev/blog/learning-swiftui-with-netnewswire">tại đây</a>.</p><h2>Virtualization Framework</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/9/simplevm.png" alt="9"/><p>Anh bạn <a href="https://twitter.com/KhaosT">KhaosT</a> đã làm mộtt thử nghiệm để <a href="https://twitter.com/KhaosT/status/1287289058964561920?s=20">chạy Ubuntu trong macOS app</a> sử dụng <a href="https://developer.apple.com/documentation/virtualization">Virtualization Framework</a>. Các bạn tham khảo mã nguồn <a href="https://github.com/KhaosT/SimpleVM">ở đây</a>.</p><h2>Snap</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/9/snap.png" alt="9"/><p>Một UX design pattern khá phổ biến hiện nay là bottom drawer. Chúng ta có thể thấy nó ở Apple Maps, Apple Music hay Google Maps. Nếu bạn sử dụng SwiftUI, bạn có thể tham khảo [Snap], nếu bạn sử dụng UIKit, bạn có thể tham khảo <a href="https://github.com/mrustaa/ContainerController">ContainerController</a></p><h2>Network library của Spotify</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/9/spotify.png" alt="9"/><p>Spotify tuần vừa rồi cũng giới thiệu một network library mà họ dùng trong app của họ, có tên là <a href="https://github.com/spotify/SPTDataLoader">SPTDataLoader</a>. Library này xây dựng dựa trên NSURLSession và hỗ trợ authentication + back-off policy. Các bạn tham khảo mã nguồn trên <a href="https://github.com/spotify/SPTDataLoader">Github</a> nhé</p><h1>Lời kết:</h1><p>Tuần tới mình sẽ relocate sang Singapore nên sẽ khá bận. Rất có thể bài viết cho tuần tới sẽ bị muộn hơn so với mọi lần, các bạn thông cảm nhé.</p><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC và muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/tran.binhan">kết nối với mình</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-07-22_ban_tin_swift_vietnam_so_8</guid><title>Bản tin Swift Việt Nam #8</title><description>Bản tin Swift Việt Nam #8</description><link>https://swiftvietnam.com/posts/2020-07-22_ban_tin_swift_vietnam_so_8</link><pubDate>Wed, 22 Jul 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/8/swiftvietnam_8.png" alt="8"/><h1>Bản tin Swift Việt Nam #8</h1><p>Tuần vừa rồi chắc bạn nào dùng Facebook SDK thì cũng biết là app của bạn sẽ bị crash vì lỗi của Facebook SDK. Rất nhiều app lớn trên thế giới như Spotify, Pinterest, Tinder cũng bị <a href="https://www.theverge.com/2020/7/10/21319784/ios-apps-crashing-spotify-tiktok-pinterest-tinder-facebook-sdk-certification-issue">chung số phận</a>. Điều đáng nói là đây là <a href="https://www.theverge.com/2020/5/6/21250023/facebook-sdk-login-spotify-tinder-tiktok-ios-iphone-crash">lần thứ 2</a> Facebook SDK khiến hàng loạt apps bị chết như vậy chỉ trong vài tháng. Cá nhân mình thấy điều này thự sự nguy hiểm vì một SDK không nên can thiệp quá sâu vào apps như vậy. Vấn đề ở đây là các SDK lớn như Facebook SDK hay Firebase dùng <a href="https://nshipster.com/method-swizzling/">Method Swizzling</a> để thay thế các tính năng của iOS SDK bằng implementation của mình. Thế nên các SDK này thực sự đã khả dụng ngay cả khi bạn chưa sử dụng bất cứ tính năng nào của nó. Nếu có thể, các bạn nên tránh sử dụng các SDKs khi các bạn không thể tắt được tính năng Method Swizzling đi vì rất dễ gây xung đột. Ví dụ như Firebase cho phép bạn tắt Method Swizzling theo <a href="https://firebase.google.com/docs/cloud-messaging/ios/client">hướng dẫn sau</a>.</p><h1>Swift:</h1><h2>Swift Service Lifecycle</h2><p>Apple mới giới thiệu một Framework mới dành cho Server-Side Swift có tên là <code>Swift Service Lifecycle</code>. Tại mình cũng không quan tâm lắm đến Swift trên server nên mình không đi vào chi tiết. Các bạn đọc bài giới thiệu về Swift Service Lifecycle <a href="https://swift.org/blog/swift-service-lifecycle/">ở đây</a> hoặc xem mã nguồn <a href="https://github.com/swift-server/swift-service-lifecycle">tại đây</a>.</p><h1>Bài viết:</h1><h2>Mẹo phỏng vấn việc làm cho iOS developers:</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/8/interview.png" alt="8"/><p>Là iOS devs, chắc hẳn anh em chúng ta đều có ít nhiều kinh nghiệm tham gia các cuộc phỏng vấn việc làm. Tuỳ quy mô công ty, start-up hay công ty lớn, cấu trúc của các cuộc phỏng vấn, thời gian phỏng vấn cũng như số vòng phỏng vấn sẽ khác nhau. Mình không có kinh nghiệm về phỏng vấn iOS Devs ở Việt Nam, nhưng mình cũng tham gia nhiều vòng phỏng vấn ở Đức, Sing, Mỹ nên mình recommend các bạn bài <a href="https://www.raywenderlich.com/10625296-navigating-the-ios-interview">Navigating the iOS Interview</a> để tham khảo. Bài viết mô tả khá chi tiết các thành phần của một process phỏng vấn cho vị trí iOS, cũng như những kinh nghiệm và cách thức học, chuẩn bị cho những vòng phỏng vấn này.</p><p>Một resource khác cũng khá hay liên quan đến việc phỏng vấn việc làm cho developers là <a href="https://github.com/jwasham/coding-interview-university">github repo này</a>.</p><h2>GridView trong SwiftUI</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/8/gridview.png" alt="8"/><p>Một trong những bổ xung đáng giá của SwiftUI trong năm 2020 là Grid layout (hay UICollectionView trong UIKit). Với việc SwiftUI hỗ trợ xây dựng app cho hầu hết các platforms của Apple, nhu cầu làm responsive design cho Swift Apps khá là cần thiết, và Grid layout là một công cụ rất quan trọng cho thiết kế này. Rất may Apple đã cung cấp các API <code>LazyVGrid</code> và <code>LazyHGrid</code> trong bản cập nhật SwiftUI mới. Anh bạn Majid có viết một bài miêu tả khá chi tiết cách thức hoạt động của <code>LazyVGrid</code> và <code>LazyHGrid</code> <a href="https://swiftwithmajid.com/2020/07/08/mastering-grids-in-swiftui/">tại đây</a>.</p><h2>SwiftUI vs UIKit</h2><p>Nếu các bạn đang quen sử dụng UIKit và bắt đầu học SwiftUI, chắc chắn các bạn sẽ thấy rất khó hiểu lúc bắt đầu. Điều này không có gì là lạ vì SwiftUI đi theo hướng <a href="https://developer.apple.com/xcode/swiftui/">"declarative UI"</a> còn UIKit là "imperative UI". Một trong những concept đặc biệt của SwiftUI là tất cả <code>View</code> đều được khai báo bằng <code>struct</code>, tức là một <code>value type</code>, chứ không như <code>UIView</code> là một class, tức là <code>reference type</code>. Bài viết <a href="https://www.hackingwithswift.com/books/ios-swiftui/why-does-swiftui-use-structs-for-views">này</a> của anh Paul Hudson sẽ giải thích rõ hơn tại sao <code>View</code> trong SwiftUI lại là <code>struct</code>.</p><h2>Dùng Bazel để tăng tốc build iOS apps</h2><p>Bài này cho một bạn lập trình viên người việt tên <a href="https://twitter.com/thi_dt">Thi</a> đang làm cho Line ở Nhật viết trên blog của công ty. <a href="https://bazel.build/">Bazel</a> là một build system được phát triên bởi Google, đặc biệt thích hợp để xây dựng các hệ thông lớn, phức tập, có nhiều dependencies. Đặc biệt với khả năng cache builds và artifacts, qúa trình build các app lớn, nhiều dòng code được tăng tốc rất nhiều. Các bạn có thể đọc chi tiết <a href="https://engineering.linecorp.com/en/blog/improving-build-performance-line-ios-bazel/">bài của bạn Thi</a> xem Line đã sử dụng Bazel để tăng tốc build app Line như thế nào nhé.</p><h1>Mã nguồn:</h1><h2>AAChartKit-Swift</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/8/aachartkit.png" alt="8"/><p>Nếu bạn đang tìm một framework để vẽ biểu đồ trong ứng dụng của mình thì các bạn không thể bỏ qua <a href="https://github.com/AAChartModel/AAChartKit-Swift">AAChartKit-Swift</a>. AAChartkit-Swift hỗ trợ rất nhiều loại biểu đồ khác nhau, bạn cũng có thể tương tác trực tiếp với các biểu đồ này, hỗ trợ <code>iOS</code>, <code>iPadOS</code> và <code>macOS</code>. Bạn có thể tham khảo mã nguồn và cách sử dụng AAChartKit-Swift <a href="https://github.com/AAChartModel/AAChartKit-Swift">tại đây</a> nhé.</p><h1>Công cụ:</h1><h2>Rectangle</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/8/rectangle.png" alt="8"/><p>Một ứng dụng dành cho macOS mã nguồn mở để quản lý cửa sổ một cách dễ dàng bằng các phím tắt. Ứng dụng này đặc biệt hữu ích nếu các bạn sử dụng màn hình phụ với độ phân giải lớn. Bạn sẽ có thể dễ dàng sắp xếp các cửa sổ này theo layout bạn thích để tiện cho công việc. Vì là ứng dụng mã nguồn mở nên nó hoàn toàn miễn phí. Bạn có thể tại app <a href="https://rectangleapp.com/">tại đây</a>, hoặc tham khảo mã nguồn <a href="https://github.com/rxhanson/Rectangle">tại đây</a></p><h1>Lời kết:</h1><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC và muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/tran.binhan">kết nối với mình</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-07-15_ban_tin_swift_vietnam_so_7</guid><title>Bản tin Swift Việt Nam #7</title><description>Bản tin Swift Việt Nam #7</description><link>https://swiftvietnam.com/posts/2020-07-15_ban_tin_swift_vietnam_so_7</link><pubDate>Wed, 15 Jul 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/7/swiftvietnam_7.png" alt="7"/><h1>Bản tin Swift Việt Nam #7</h1><p>Tuần trước mình bận việc nhiều quá nên không có thời gian để viết bản tin. Mục tiêu của mình là phát hành Bản Tin Swift hàng tuần. Nhưng vì mình muốn đảm bảo chất lượng cho bản tin này nên mình muốn dành thời gian nghiên cứu và sưu tầm những thông tin đáng quan tâm nhất thay vì phát hành theo số lượng. Tuy nhiên công việc này đòi hỏi khá nhiều thời gian tìm hiểu, đọc và tóm tắt, và mình làm tất cả các công việc này trong free time song song với công việc hằng ngày và gia đình nên các bạn thông cảm là thỉnh thoảng mình sẽ skip một vài tuần nhé 😋.</p><h1>Swift:</h1><h2>Swift deep dive:</h2><p>Sau WWDC là quãng thời gian rất bận rộn của developer vì chúng ta cần phải cập nhật kiến thức mới và chuẩn bị cho các phiên bản hệ điều hành sắp phát hành của Apple. Trong bài #6 mình có giới thiệu sơ về các APIs mới xuất hiện trong Swift 5.2/5.3. Apple vừa phát hảnh <a href="https://developer.apple.com/news/?id=tjv7v7k1">danh sách tổng hợp</a> những video liên quan đến Swift tại WWDC20 để chúng ta tiện theo dõi.</p><h2>Swift in Xcode 12:</h2><p>Xcode 12 ngoài việc có giao diện mới còn có rất nhiều thứ mới mẻ liên quan đên Compiler/Swift. Các bạn theo dõi các video <a href="https://developer.apple.com/news/?id=4nh602ih">tại đây</a> để biết thêm chi tiết nhé.</p><h1>Bài viết:</h1><h2>Có gì mới trong UIKit cho iOS 14:</h2><p>Apple đã đầu tư rất nhiều cho SwiftUI nhưng UIKit vẫn là thành phần không thể thiếu cho các Apple platforms. Trong WWDC20, Apple cũng ra giới thiệu rất nhiều APIs mới dành cho UIKit. Bạn có thể xem tổng hợp về những điểm mới trong UIKit <a href="https://www.swiftjectivec.com/ios-14-notable-uikit-additions/">tại đây</a> nhé.</p><h2>MatchedGeometryEffect</h2><p>SwiftUI 2.0 có giới thiệu một hiệu ứng animation mới tên là `MatchedGeometryEffect' rất hay. Giải thích đơn giản là bạn có thể tạo ra hiệu ứng chuyển động như trong hình chỉ bằng vài dòng code trong SwiftUI.</p><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/7/small-loop-1.gif" alt="7"/><p>Bạn có thể đọc hướng dẫn chi tiết cách sử dụng Effect này tại đây: <a href="https://swiftui-lab.com/matchedgeometryeffect-part1/">phần 1</a>, <a href="https://swiftui-lab.com/matchedgeometryeffect-part2/">phần 2</a></p><h2>Sử dụng <code>UICollectionView</code> như <code>UITableView</code></h2><p>Trong bản tin Swift Việt Nam số #6, mình có giới thiệu một số API mới của <code>UICollectionView</code> giúp chúng ta có thể sự dụng nó như <code>UITableView</code>. Trong số này mình xin giới thiệu một bài viết chi tiết cách sử dụng các API này <a href="https://useyourloaf.com/blog/creating-lists-with-collection-view/">tại đây</a> nhé.</p><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/7/tableview.png" alt="7"/><h1>Mã nguồn:</h1><h2>SwiftUI-Kit</h2><p>Ứng dụng mã nguồn mở showcases các thành phần UI của SwiftUI cho tất cả các Apple Platforms. Nếu bạn đang bắt đầu học SwiftUI thì đây là một ứng dụng rất hữu ích để tra cứu nhanh các controls của SwiftUI. Các bạn xem chi tiết về SwiftUI-Kit <a href="https://github.com/jordansinger/SwiftUI-Kit">tại đây</a></p><h2>RedditOS</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/7/redditos.png" alt="7"/><p>Những ai đã theo dõi SwiftUI từ năm ngoái chắc hẳn không lạ gì anh bạn <a href="https://github.com/Dimillian">Thomas Ricouard</a> với ứng dụng mã nguồn mở <a href="https://github.com/Dimillian/MovieSwiftUI">MovieSwiftUI</a>. Ứng dụng này là một trong những ứng dụng phức tạp được viết bằng SwiftUI đầu tiên, và nó được <a href="https://twitter.com/Dimillian/status/1276069357550960641">Swift team sử dụng</a> benchmark SwiftUI phiên bản 2. Anh bạn này sau đấy còn phát hành một app open source nữa viết bằng SwiftUI <a href="https://github.com/Dimillian/ACHNBrowserUI">dành cho fan của game Animal Crossing</a>. Và trong tuần này, anh bạn Thomas lại đã giới thiệu thêm một ứng dụng mã nguồn mở khác có tên là <a href="https://github.com/Dimillian/RedditOS">RedditOS</a>. Theo mình các ứng dụng này là resources rất tốt để học về SwiftUI.</p><h1>Công cụ:</h1><h2>Difference</h2><p>Đây là một framework giúp cho bạn dễ dàng nhìn thấy sự khác nhau giữa 2 objects khi các bạn so sánh bằng <code>XCTAssertEqual</code> trong unit tests. Cái này rất hữu ích để nhận biết nhanh tests của các bạn lỗi ở đâu, giúp cho việc sửa chúng dễ dàng hơn.</p><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/7/difference.png" alt="7"/><p>Các bạn có thể xem chi tiết về <a href="https://github.com/krzysztofzablocki/Difference">Difference</a> tại đây</p><h2>hidden</h2><p>Đây là một công cụ mã nguồn mở dùng để ẩn icon trên Menu bar của máy Mac hiện đang trending trên Github. Nguyên nhân chính mình giới thiệu app này tại đây là vì nó được phát triển bở một công ty Việt Nam: <a href="https://dwarves.foundation">Dwarves Foundation</a></p><p>Các bạn xem chi tiết về hidden <a href="https://github.com/dwarvesf/hidden">tại đây</a></p><h2>FNMNetworkMonitor</h2><p><code>FNMNetworkMonitor</code> là framework dùng để theo dõi và ghi lại các hoạt động mạng của ứng dụng iOS, phục vụ cho việc debug code liên quan networking. Ngoài ra <code>FNMNetworkMonitor</code> còn có thể được sử dụng để mock các requests cho ứng dụng iOS, giúp ích cho việc kiểm tra lỗi và test ứng dụng.</p><p>Các bạn xem chi tiết về <code>FNMNetworkMonitor</code> <a href="https://github.com/Farfetch/network-monitor-ios">tại đây</a></p><h2>SwiftUI Property Wrappers</h2><p>SwiftUI 2.0 giới thiệu rất nhiều Property Wrappers mới. Việc hiểu và sử dụng cá PW này không phải là việc đơn giản, đặc biệt là những ai mới làm quen với SwiftUI.</p><p>Anh bạn <a href="https://www.donnywals.com/">Donny Wals</a> có tổng hợp các PWs và hướng dẫn cách sử dụng chúng <a href="https://swiftuipropertywrappers.com/">tại đây</a> để các bạn tham khảo nhé.</p><h1>Hài hước</h1><p><a href="https://twitter.com/Valzevul/status/1275164878056103936?s=20">Mèo 😹</a></p><h1>Lời kết:</h1><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC và muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/tran.binhan">kết nối với mình</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-06-22_ban_tin_swift_vietnam_so_6</guid><title>Bản tin Swift Việt Nam #6 - WWDC Special</title><description>Bản tin Swift Việt Nam #6 - WWDC có gì mới?</description><link>https://swiftvietnam.com/posts/2020-06-22_ban_tin_swift_vietnam_so_6</link><pubDate>Mon, 22 Jun 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/6/swiftvietnam_6.png" alt="6"/><h1>Bản tin Swift Việt Nam #6 - WWDC Special</h1><p>Vậy là WWDC20 đã kết thúc. Anh em lập trình viên chúng ta lại có thêm nhiều APIs để nghịch. Apple không giới thiệu phần cứng mới nào trong WWDC lần này nhưng macOS on Apple Silicon là một thay đổi lớn và sẽ ảnh hưởng nhiều đến các phần cứng được giới thiệu trong tương lai.</p><p>WWDC20 cũng đánh dấu lần đầu tiên WWDC được tổ chức trực tuyến thay vì tập trung tại hội trường. Phần Keynote và Platforms State of the Union được thu sẵn nên hình ảnh mượt mà bóng bảy hơn. Các nhân mình cảm thấy chưa quen và "nhớ" những tràng pháo tay khi tính năng mới được giới thiệu như trong ác WWDC trước.</p><p>Phần Platforms State of the Union được lập trình viên chờ đợi nhất thì mình thấy hơi nhàm chán vì hơn 30 phút đầu Apple chỉ tập trung nói về macOS on Apple Silicon. Tuy nhiên với việc giới thiệu macOS Big Sur, iOS 14 với cải tiền màn hình chính, Widgets và App Clips, iPadOS với các tính năng mới giúp tận dùng diện tích màn hình tốt hơn, watchOS hỗ trợ nhiều Complications từ một app, Xcode 12 cực kỳ ít crash và có auto completion cực nhanh, mình cảm thấy khá hài lòng với kỳ WWDC lần này.</p><p>Đặc biệt là các video của WWDC được làm rất ngắn gọn và đi thẳng vào trọng tâm. App Apple Developer hỗ trợ rất tốt việc vừa xem video và vừa copy code theo đúng timeline, rất thuận tiện trong việc thử code trực tiếp.</p><h1>Các phiên bản hệ điều hành mới</h1><p>Apple đã giới thiệu iOS 14, iPad 14, tvOS 14, watchOS 7, macOS Big Sur (sẽ là phiên bản 11 của macOS) với rất nhiều tính năng cũng như thiết kế mới.</p><p>Mình sẽ không đi sâu vào giới thiệu các tính năng mới của các phiên bản hệ điều hành này. Bạn có thể xem thêm trên các trang tin tức khác:</p><ul><li><a href="https://tinhte.vn/thread/wwdc20-ios-14-chinh-thuc-tu-dong-gom-ung-dung-widget-moi-them-loat-tinh-nang-cho-siri.3151444/">Tinh tế</a></li><li><a href="https://zingnews.vn/7-thay-doi-dang-cho-doi-nhat-tren-ios-14-post1098587.html#zingweb_category_category476_featured_5">Zing</a></li><li><a href="https://9to5mac.com/2020/06/22/wwdc-2020-live-blog-news/">9To5Mac</a></li><li><a href="https://techcrunch.com/2020/06/22/heres-everything-apple-announced-in-the-wwdc-2020-keynote-today/">Techcrunch</a></li></ul><h1>Các API mới</h1><h2>Swift 5.3</h2><p>Các tính năng mới trong Swift 5.3 chúng ta đều biết trước hết rồi vì các quá trình Swift Evolution đều public hết cả.</p><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/6/language_features.png" alt="language_features"/><h2>SwiftUI</h2><p>Có thể nói trong WWDC20, Apple đã giới thiệu SwiftUI 2.0 với rất nhiều tính năng mới. Đặc biệt chúng ta có thể thấy nỗ lực của Apple khi đảm bảo backward compability, hỗ trợ tất cả các app được viết bằng SwiftUI 1.0.</p><p>Với SwiftUI mới, chúng ta đã có thể viết tất cả các app, widgets, extensions trên tất cả các platforms của Apple bằng SwiftUI, đúng như chiến lược <a href="https://developer.apple.com/videos/play/wwdc2019/240/">SwiftUI On All Devices</a></p><p>Các thông tin ngắn gọn về những tính năng mới của SwiftUI các bạn có thể xem <a href="https://wwdcnotes.com/notes/wwdc20/10041/">tại đây</a>. Một số phân tích chi tiết hơn <a href="https://swiftwithmajid.com/2020/06/23/what-is-new-in-swiftui/">ở đây</a></p><p>Một Youtube video tổng hợp của anh Paul Hudson về những tính năng mới của SwiftUI có <a href="https://www.hackingwithswift.com/articles/221/whats-new-in-swiftui-for-ios-14">tại đây</a>.</p><h2>UICollectionView + UICollectionLayoutListConfiguration</h2><p>Tất nhiên Apple cũng vẫn bổ sung các tính năng mới cho UIKit, đặc biệt là với UICollectionView. Nếu như trong WWDC2019, UICollectionView được bổ sung DiffableDataSource và các layout mới để để tối ưu việc hiển thị dữ liệu trên nhiều resolutions khác nhau, thì trong WWDC20 lần này, Apple giới thiệu <code>UICollectionLayoutListConfiguration</code> để giúp chúng ta có thể sử dụng <code>UICollectionView</code> như một <code>UITableView</code>. Thông tin ngắn gọn về <code>UICollectionLayoutListConfiguration</code> các bạn có thể xem <a href="https://wwdcnotes.com/notes/wwdc20/10026/">tại đây</a></p><h2>Swift Package Manager</h2><p>Điểm mới đáng chú ý nhất là SPM sẽ hỗ trợ resources (ảnh, phim vân vân...) bằng cách sử dụng assets catalog (.xcasset) trong Xcode 12/Swift 5.3.</p><p>Thông tin tông hợp ngắn gọn các bạn có thể xem <a href="https://wwdcnotes.com/notes/wwdc20/10169/">ở đây</a>.</p><h2>WidgetKit</h2><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/6/intent_configuration.png" alt="intent_configuration.png"/><p>Apple cuối cùng cũng copy tính năng Widget từ Android 😬.</p><p>Chúng ta có thể tạo Widget bằng framework WidgetKit. Điểm đặc biệt là các Widget chỉ được dùng để hiển thị thông tin mà không có chức năng tương tác nào.</p><p>Thông tin ngắn gọn về WidgetKit có <a href="https://wwdcnotes.com/notes/wwdc20/10028/">tại đây</a>.</p><h2>StoreKit Testing in Xcode</h2><p>Việc phát triển In-App-Purchase thường rất phức tạp vì chúng ta phải chuyển qua lại giữa Sandbox và Production để test. Trong Xcode 12, Apple đã tích hợp chức năng kiểm thử In-App-Purchase trực tiếp vào Xcode, giúp chúng ta kiểm tra được IAP có hoạt động hay không dễ dang hơn rất nhiều. Chi tiết các bạn xem <a href="https://developer.apple.com/videos/play/wwdc2020/10659/">ở đây</a>.</p><p>Hướng dẫn cụ thể từng bước có <a href="https://www.revenuecat.com/blog/storekit-testing-in-xcode">tại đây</a></p><h2>App Clips</h2><p>App Clips có thể coi là một phiên bản rút gọn của apps. Bằng cách quét QRCode hoặc dùng NFC, người dùng có thể cài đặt các App Clips (dung lượng dưới 10MB) nhanh và chạy ngay để dùng được một tính năng nhất định mà không phải cài đặt toàn bộ cả app. Cái này có lẽ giống Instant App trên Android.</p><p>Chi tiết về App Clips có <a href="https://developer.apple.com/videos/play/wwdc2020/10174/">tại đây</a>.</p><h2>CoreML - Machine Learning:</h2><p>Năm nay Apple không giới thiệu nhiều tính năng mới cho mảng máy học. Một điểm đáng chú ý nhất có lẽ là tính năng <a href="https://developer.apple.com/documentation/coreml/core_ml_api/encrypting_a_model_in_your_app">mã hoá model</a> để không ai có thể đánh cắp model của bạn và dùng trên app khác. Ngoài ra các Frameworks như Vision cũng được bổ sung một số tính năng như nhận diện tay và cơ thể.</p><p>Các tính năng mới khác có trong CoreML các bạn có thể tham khảo <a href="https://machinethink.net/blog/new-in-apple-machine-learning-2020/">tại đây</a></p><h2>Quyền riêng tư</h2><p>Apple tiếp tục đầu tư vào bảo vệ quyền riêng tư của người dùng. Mọi người chắc hẳn đều đang giật mình việc <a href="https://tinhte.vn/thread/ban-ve-chuc-nang-tu-doc-clipboard-cua-zalo-tiktok.3154165/">Tiktok hay Zalo copy thông tin từ pasteboard</a> của iPhone mà chỉ nhờ có iOS chúng ta mới biết. Là một lập trình viên, mình có thể hiểu được vì sao chúng ta cần lấy thông tin từ pasteboard cho một số tính năng nhất định. Tuy nhiên với iOS 14, lập trình viên cần chú ý hơn khi sử dụng các API này hoặc phải giải thích cụ thể cho người dùng tại sao lại có tính năng đó.</p><p>Thông tin thêm về các tính năng bảo về quyền riêng tư từ Apple các bạn có thể xem <a href="https://wwdcbysundell.com/2020/security-privacy-announcements-at-wwdc20/">ở đây</a></p><h1>Lời kết:</h1><p>Trên đây chỉ là một số thông tin ngắn gọn về WWDC mình tổng hợp lại trong hơn 1 tuần vừa rồi. Toàn bộ videos của WWDC20 có <a href="https://developer.apple.com/videos/all-videos/">tại đây</a>. Chúng ta có hẳn 1 năm để nghiền ngẫm trước khi WWDC21 bắt đầu 😋.</p><p>Mình cũng xin giới thiệu một số tài nguyên khác liên quan đến WWDC để mọi người tiện tham khảo:</p><ul><li><a href="https://github.com/Blackjacx/WWDC">WWDC Notes</a></li><li><a href="https://github.com/Blackjacx/WWDC">WWDC 2020 Session Notes</a></li><li><a href="https://wwdcbysundell.com/">WWDC By Sundell</a></li><li><a href="https://github.com/twostraws/wwdc">WWDC Community</a></li><li><a href="https://www.hackingwithswift.com/articles/221/whats-new-in-swiftui-for-ios-14">What's new in SwiftUI for iOS 14</a></li><li><a href="https://github.com/artemnovichkov/wwdc20-samplecode">WWDC20 Sample Code</a></li></ul><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC và muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/tran.binhan">kết nối với mình</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-06-17_ban_tin_swift_vietnam_so_5</guid><title>Bản tin Swift Việt Nam #5</title><description>Bản tin Swift Việt Nam #5</description><link>https://swiftvietnam.com/posts/2020-06-17_ban_tin_swift_vietnam_so_5</link><pubDate>Wed, 17 Jun 2020 08:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/5/swiftvietnam_5.png" alt="5"/><h1>Bản tin Swift Việt Nam #5</h1><p>Apple tuần vừa rồi đã đăng lịch cụ thể cho WWDC. Ngoài ra app WWDC cho Mac cũng được phát hành để phục vụ cho việc live stream. Bài viết này sẽ tập trung chủ yếu chia sẻ các resources và thông tin về WWDC để các bạn có được trải nghiệm tốt nhất.</p><h1>Apple</h1><h2>Thông tin WWDC</h2><img src="https://www.apple.com/newsroom/images/live-action/wwdc/Apple_details-for-WWDC2020_06022020_big.jpg.large_2x.jpg" alt="wwdc"/><p>Apple đã giới thiệu lịch trình cụ thể về WWDC trên trang web của mình.</p><ul><li>0h 23.06 Special Key Note</li><li>4h 23.06 Platforms State of the Union</li><li>100+ Engineering Sessions</li><li>All-New Developer Forums</li><li>1-on-1 Developer Labs (by appointment)</li></ul><p>Tất cả đều diễn ra online, trực tiếp trên trang apple.com hoặc youtube. Thông tin chi tiết <a href="https://www.apple.com/newsroom/2020/06/apple-reveals-lineup-for-its-biggest-ever-worldwide-developers-conference/">tại đây nhé</a>.</p><h2>Apple developers app cho MacOS</h2><img src="https://is5-ssl.mzstatic.com/image/thumb/PurpleSource113/v4/23/08/50/2308502f-2393-2b7d-87dd-57b189273122/269e489a-9bec-40c5-8fbc-f4b39de3068c_macOS-1.png/626x0w.png" alt="macos"/><p>Apple vừa release app WWDC cho MacOS 🥳.</p><p>Các bạn download <a href="https://apps.apple.com/us/app/apple-developer/id640199958">tại đây</a> nhé.</p><p>Cá nhân mình vẫn recommend app https://wwdc.io hơn vì diện đẹp hơn. App của Apple được biên dịch lại bằng Catalyst nên thực ra nó là iOS/iPadOS app 😉</p><h1>Bài viết</h1><h1>Design Patterns trong Swift</h1><p>Mình tình cờ tìm thấy trang web của bạn <a href="https://www.swiftyvn.com/">Sao Vũ</a>. Bạn có viết rất nhiều bài chuyên sâu về Design Patterns trong Swift, rất dễ hiểu và có cả code mẫu để theo dõi. Design patterns rất quan trong khi bạn muốn thiết kế ứng dụng hiệu quả và dễ maintained. Đặc biệt design patterns cũng rất hay được hỏi khi phỏng vấn xin việc.</p><p>Các bạn có thể đọc thêm các bài viết về design patterns tại trang web của bạn <a href="https://www.swiftyvn.com/">Sao Vũ</a> nhé.</p><p>Các bạn cũng có thể tham khảo thêm về design patterns <a href="https://github.com/ochococo/Design-Patterns-In-Swift">tại đây</a>.</p><h1>Chuẩn bị cho WWDC</h1><p>Nếu bạn muốn có trải nghiệm WWDC tốt nhất, bạn nên có những bước chuẩn bị trược khi WWDC bắt đầu. Bạn Antoine có viết một bài viết khá ngắn gọn <a href="https://www.avanderlee.com/optimization/wwdc-2020-tips/">7 bước</a> để các bạn chuẩn bị cho WWDC 2020</p><h1>Công cụ</h1><h2>Swift Package Index</h2><p>Nếu các bạn đang sử dụng Cocoapods và Carthage để quản lý dependencies, thì các bạn nên bắt đầu tìm hiểu Swift Package Manager (SPM) vì đây là tool native của Apple, được phát triển bởi Apple và tích hợp rất tốt với Xcode.</p><p>Tuy nhiên có một vấn đề với SPM là bạn không biết package nào có hỗ trợ nó. Mình xin giới thiệu với các bạn <a href="https://swiftpackageindex.com/">Swift Package Index</a>. Đây là trang tổng hợp các packages có hỗ trợ SPM, hỗ trợ chức năng tìm kiếm và mã nguồn mở nên ai cũng có thể thêm packages của mình vào được. Swift Package Index</p><h2>Proxyman</h2><img src="https://raw.githubusercontent.com/ProxymanApp/Proxyman/master/screenshots/proxyman_dashboard_1.8.0.png" alt="Proxyman"/><p>Tuần vừa rồi, bạn <a href="https://nghiatran.me/">Nghia Tran</a> đã giới thiệu phiên bản mời của Proxyman với rất nhiều cải tiến mới.</p><p><a href="https://proxyman.io/">Proxyman</a> là ứng dụng cho MacOS, có thể được sử dụng như một HTTP Proxy, hoạt động giống <a href="https://www.charlesproxy.com/">Charles Proxy</a> dùng để theo dõi và debug kết nối HTTP/HTTPs cho các ứng dụng iOS/MacOS/Android. App này được phát triển bởi một team người Việt, với dev chính là bạn <a href="https://nghiatran.me/">Nghia Tran</a> và nhận được khá nhiều phản hồi tích cực từ cộng đồng. Các bạn có thể xem thêm về Proxyman <a href="https://proxyman.io/">tại đây</a> nhé.</p><blockquote><p>Mình muốn giới thiệu nhiều hơn nữa các sản phẩm được phát triển bởi lập trình viên Việt Nam. Mình nghĩ đây là cách tốt nhất để kích thích sự hứng thú của các bạn lập trình viên mới bắt đầu theo đuổi Swift. Vẫn nhớ hồi Flappy bird làm mưa làm gió, rất nhiều bạn cũng đã bắt đầu học lập trình iOS từ đó. Nếu bạn có sản phẩm nào hay cho Apple ecosystem thì nhắn tin cho mình nhé, mình sẽ giới thiệu sản phẩm của bạn trong các kỳ bản tin tiếp theo. Ngoài ra bạn cũng có thể thêm sản phẩm vào <a href="https://github.com/antranapp/IndieApps">Indie Apps Showcases</a> để giới thiệu sản phẩm của mình với các indie developers khác.</p></blockquote><h1>Tổng hợp WWDC</h1><h2>WWDCNotes</h2><p>Nếu các bạn không có thời gian nhưng muốn tổng hợp lại kiến thức iOS bằng cách xem lại các video của các kỳ WWDC trước một cách nhanh nhất, các bạn có thể sử dụng <a href="https://www.wwdcnotes.com/">WWDCNotes</a> vào mục đích này. Trang web này tổng hợp ngắn gọn nội đung của các WWDC videos. Toàn bộ nội dung được <a href="https://github.com/zntfdr/WWDC-notes">hosted trên github</a> nên ai cũng có thể tham gia đóng góp được.</p><p>Các bạn có thể xem bài giới thiệu WWDCNotes <a href="https://www.fivestars.blog/meta/wwdc-notes.html">tại đây</a>.</p><h2>WWDC Community</h2><p>Anh <a href="https://twitter.com/twostraws">Paul Hudson</a> có chuẩn bị sẵn một github repository để tổng hợp các thông tin của các kỳ WWDC trước cũng như chia sẻ các thông tin mới về kỳ WWDC lần này. Thông tin sẽ được chia sẻ bởi nhiều người chứ không phải chỉ riêng anh Paul. Danh sách những người có thể đóng góp bài viết có trên trang web nhé.</p><p>WWDC Community được hosted <a href="https://github.com/twostraws/wwdc">tại đây</a>.</p><h2>WWDC by Sundell</h2><p>Anh bạn John Sundell cũng thông báo trên Twitter là trang web cho WWDC By Sundell đã sẵn sàng. Lần này John sẽ không làm một mình mà hợp tác cùng một số blogger khác để cập nhật các thông tin mới nhất về WWDC cũng như các APIs mới sẽ được giới thiệu. Mình là một big fan của John vì nội dung John viết rất dễ hiểu và các kỹ thuật John giới thiệu chúng ta có thể áp dụng được ngày vào ứng dụng của mình.</p><p>Các bạn có thể bookmark WWDC by Sundell <a href="https://wwdcbysundell.com/">tại đây</a>.</p><h1>Sự kiện</h1><h2>Pre-WWDC Virtual Trivia!</h2><p>Cuối tuần vui vẻ trước khi bắt đầu WWDC. Tham gia trả lời các cậu hỏi liên quan đến Swift, lịch sử WWDC, hệ sinh thái Apple. Ngoài ra bạn cũng thể kết nối giao lưu với cộng đồng lập trình viên Swift thế giới. Sự kiện được tổ chức bởi các thành viên rất nổi tiếng của cộng đồng Swift, một số còn làm việc cho Apple như <a href="https://twitter.com/niharikabedekar">Niharika Bedekar</a>, <a href="https://twitter.com/hollyborla">Holly Borla</a>, <a href="https://twitter.com/krstnfx">Kristina Fox</a>, <a href="https://twitter.com/twostraws">Paul Hudson</a>, và <a href="https://twitter.com/kthomas901">Kaya Thomas</a>.</p><h2>wwdcwatch.party</h2><p>Năm nay lần đầu tiên WWDC được tổ chức trực tuyến nên sẽ có nhiều sự kiện được tổ chức để mọi người cùng xem trực tiếp và bàn luận về WWDC. <a href="https://wwdcwatch.party/">WWDC 2020 Watch Party</a> là một trong những sự kiện lớn nhất trong số đó. Ngoài việc cùng nhau xem WWDC, hằng ngày các bạn cũng có thể xem các bài phát biểu về các chủ đề khác nhau liên quan đến iOS development.</p><p>Thông tin chi tiết các bạn xem <a href="https://wwdcwatch.party/">tại đây</a>.</p><h2>wwdctogether</h2><p>Thêm một trang web nữa để anh em tụ tập xem WWDC cùng nhau: <a href="https://wwdctogether.com/">WWDCTogether</a></p><p>Viết bởi 1 bạn tên là <a href="https://twitter.com/onmyway133">Khoa</a> 🙂</p><h1>Vui</h1><ul><li>Twitter có một <a href="https://twitter.com/twostraws/status/1272939434930065411?s=20">emoji riêng</a> cho WWDC20 🤯</li><li><a href="https://twitter.com/balestrapatrick/status/1269746411526139904">Netflix</a> 🤷‍♂️</li></ul><h1>Lời kết</h1><p>Tuần tới là một tuần đặc biệt cho các lập trình viên iOS. Chúng ta sẽ được biết các công nghệ và API mới để sử dụng cho các ứng dụng của mình trong năm tiếp theo. Mình sẽ cố gắng cập nhật các thông tin và dịch lại các bài tổng hợp để đưa thông tin về WWDC 2020 đến các bạn nhanh nhất.</p><p>Nếu các bạn có các bài viết liên quan đến Swift, WWDC và muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/tran.binhan">kết nối với mình</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-06-10_ban_tin_swift_vietnam_so_4</guid><title>Bản tin Swift Việt Nam #4</title><description>Bản tin Swift Việt Nam #4</description><link>https://swiftvietnam.com/posts/2020-06-10_ban_tin_swift_vietnam_so_4</link><pubDate>Wed, 10 Jun 2020 23:21:00 +0800</pubDate><content:encoded><![CDATA[<img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/4/swiftvietnam_4.png" alt="4"/><h1>Bản tin Swift Việt Nam #4</h1><p>Chỉ còn 2 tuần nữa là WWDC20 sẽ khai mạc. Các thông tin về sản phẩm cũng như dịch vụ mới của Apple xuất hiện ngày càng nhiều. Chúng ta hãy cùng nhau điểm qua các thông tin đang chú ý tuần qua về Swift và Apple ecosystem nhé.</p><h1>Swift</h1><h2>Function Builder</h2><p><a href="https://github.com/apple/swift-evolution/blob/9992cf3c11c2d5e0ea20bee98657d93902d5b174/proposals/XXXX-function-builders.md">Function Builder</a> là một feature được giới thiệu trong Swift 5.1, được biết đến chủ yếu qua tính năng @ViewBuilder được sử dụng trong SwiftUI. Sử dụng Function Builder, chúng ta có thể dễ dàng xây dựng được một Domain Specific Language riêng.</p><p>Hôm nay mình xin giới thiệu một số resources để các bạn học thêm về Function builder nhé:</p><ul><li><a href="https://github.com/apple/swift-evolution/blob/9992cf3c11c2d5e0ea20bee98657d93902d5b174/proposals/XXXX-function-builders.md">Swift Evolution Proposal</a></li><li><a href="https://www.vadimbulavin.com/swift-function-builders-swiftui-view-builder/">Function Builders in Swift and SwiftUI</a></li><li><a href="https://www.youtube.com/watch?v=LKFVcc_uC60">Swift Function Builders deep dive for Swift 5.3 - Following Swift Evolution 5.3</a></li><li><a href="https://github.com/carson-katri/awesome-function-builders">awesome-function-builders</a></li></ul><h1>Apple</h1><h2>iOS/iPadOS 13.6 Beta, Xcode 11.6 Beta</h2><p>Apple vừa phát hành iOS/iPadOS 13.6 Beta. Thực sự mình chưa có thời gian để xem có gì mới trong phiên bản 13.6 này. Các bạn theo dõi trang <a href="https://9to5mac.com/2020/06/09/ios-13-6-beta-2-developers/">9to5mac</a> nhé, họ sẽ cập nhật các tính năng mới trong phiên bản 13.6 trong mấy ngày tới.</p><p>Liên quan đến lập trình viên chúng ta, Xcode 11.6 Beta cũng được phát hành và Apple không cho ai biết là có gì mới trong phiên bản này 🤷‍♂️.</p><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/4/xcode116.png" alt="xcode116"/><h2>Máy Mac sử dụng chip Arm</h2><p>Mấy ngày này thông tin Apple sẽ giới thiệu máy Mac sử dụng chip Arm xuất hiện khắp các mặt báo. Đối với anh em iOS thì chắc không bị ảnh hưởng nhiều. Nhưng ai đang làm ứng dụng cho Mac sẽ phải chuẩn bị vì họ rất có thể sẽ phải biên dịch lại app của mình để chạy được trên máy Mac mới.</p><p>Tuy nhiên tất cả mới chỉ là tin đồn, chúng ta hãy chờ cụ thể xem trong WWDC20 tới.</p><p>Thông tin thêm về vấn đề này các bạn có thể đọc <a href="https://www.macrumors.com/2020/06/09/arm-based-macs-wwdc/">ở đây</a>.</p><h1>Bài viết</h1><h2>RxSwift và MVVM</h2><p><strong>RxSwift</strong> là một reactive programming framework rất phổ biến và <strong>Model-View-ViewModel(MVVM)</strong> là một kiến trúc cũng rất quen thuộc. Đây là hai thành phần được dùng rất thường xuyên để xây dựng ứng dụng cho iOS. Tài liệu về <strong>RxSwift</strong> và <strong>MVVM</strong> trên mạng có rất nhiều. Nhưng hôm nay mình xin giới thiệu với các bạn serie bài viết bằng tiếng Việt của bạn <a href="https://duybui297.site123.me/">Bùi Khánh Duy</a>. Bạn Duy trong tuần có liên lạc với mình và ngỏ ý muốn tham gia đóng góp bài viết cho SwiftVietnam và mình hoàn toàn ủng hộ.</p><p>Trong loạt bài viết của mình, bạn Duy có tạo một ứng dụng cơ bản và ứng dụng các kỹ thuật của <strong>RxSwift</strong> để xây dựng kiến trúc <strong>MVVM</strong> cho ứng dụng này. Các bạn xem loạt bài của bạn Duy <a href="https://duybui297.site123.me/rxswift-k%E1%BA%BFt-h%E1%BB%A3p-mvvm">tại đây</a> nhé.</p><h2>Độ lớn của ứng dụng rất quan trọng</h2><p>Với việc internet ngày càng nhanh, 3G/4G ngày càng rẻ, dung lượng lưu trữ của iPhone/iPad ngày càng lớn, lập trình viên có xu hướng không còn chú ý đến độ lớn của ứng dụng nữa. Chúng ta xử dụng thư viên bên thứ 3 vô tội vạ, cho ảnh và video khắp nơi trong ứng dụng mà không để ý là chúng ta đang làm ứng dụng của mình ngày càng nặng hơn. Hy vọng sau khi đọc <a href="https://farfetchtechblog.com/en/blog/post/app-size-matters-ii/">bài phân tích này</a>, các bạn sẽ thay đổi quan điểm của mình. Ứng dụng càng bé thì sẽ càng có nhiều lượt tải hơn.</p><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/4/app_install_variation_graphic_01.png" alt="appsize"/><p>Đối với lập trình viên, ứng dụng bé càng có ý nghĩa vì thời gian cài compile và install app lên máy trong quá trình phát triển cũng giảm thiểu đi đáng kể. Apple cũng có rất nhiều công nghệ giúp cho lập trình viên giảm độ lớn của ứng dụng như <a href="https://developer.apple.com/documentation/xcode/reducing_your_app_s_size/doing_basic_optimization_to_reduce_your_app_s_size">Bitcode</a>, <a href="https://developer.apple.com/videos/play/wwdc2015/404/">App Thinning</a>, <a href="https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/On_Demand_Resources_Guide/index.html">On demand resources</a>.</p><h1>Code</h1><h2>NotesTextView</h2><p>Thư viện này mở rộng tính năng cho <code>UITextView</code> bằng cách styling text bằng NSAttributedString, rất thích hợp cho các ứng dụng ghi chú hoặc viết nhật ký.</p><p>Các bạn có thể xem thêm chi tiết <a href="https://github.com/Rimesh/NotesTextView">tại đây</a>.</p><h2>Indie Apps Showcases</h2><p><strong>(Cái này là không biết xấu hổ là gì này 😉)</strong></p><p>Tuần vừa rồi mình có tình cờ đọc được trên twitter cái <a href="https://twitter.com/stroughtonsmith/status/1266058437374476293">thread này</a>. Trong thread này, các bạn developers khắp thế giới có giới thiệu về apps của họ đang làm trong thời gian qua. Có rất nhiều app hay và đáng chú ý. Thế là mình nảy ra ý tưởng viết một cái app để mọi người có thể tự giới thiệu các projects của mình tương tự như trên.</p><p><strong>Indie Apps Showcases</strong> là sản phẩm mấy ngày làm việc của mình. Ứng dụng viết bằng <strong>SwiftUI</strong> và <strong>Combine</strong>, sử dụng kiến trúc <a href="https://github.com/pointfreeco/swift-composable-architecture"><strong>The Composable Architecture</strong></a>, và sử dụng git repository làm backend. Ứng dụng và nội dung của app hoàn toàn mở và có trên GitHub.</p><p>Ứng dụng này rất thích hợp cho bạn nào đang muốn bắt đầu học SwiftUI + Combine.</p><p>Các bạn xem thêm thông tin chi tiết <a href="https://github.com/antranapp/IndieApps">tại đây</a> nhé.</p><h1>Sách</h1><h2>iOS Apperentice</h2><p>Các bạn bên raywenderlich.com đang cho xem sách iOS Apperentice miễn phí. Sách này rất thích hợp cho các bạn nào đang bắt đầu tìm hiểu về iOS. Các bạn đọc sách <a href="https://www.raywenderlich.com/community-care/ios-apprentice">tại đây</a> nhé.</p><h1>Vui</h1><p>Đúng là người Việt Nam <a href="https://twitter.com/BenGeskin/status/1268831689914159104?s=20">quá giàu</a> 😆</p><h1>Lời kết</h1><p>Mình rất vui vì có cơ hội giới thiệu về loạt vài viết tiếng Việt của bạn <a href="https://duybui297.site123.me/">Duy</a> trong bản tin lần này. Vẫn biết là resources để học iOS bằng tiếng Anh có rất nhiều trên mạng, và việc đọc hiểu tiếng Anh là một kỹ năng bắt buộc của bất cứ lập trình viên nào, thế nhưng các bài viết tiếng Việt như của bạn Duy sẽ rất hữu ích cho các bạn mới bước đầu vào học lập trình cũng như các bạn chưa có kỹ năng đọc tài liệu tiếng Anh tốt.</p><p>Mình rất mong muốn lại có cơ hội giới thiệu trong các bản tin tiếp theo các bài viết chuyên sâu về Swift bằng tiếng Việt. Nếu các bạn có các bài viết liên quan đến Swift và muốn chia sẻ với cộng động thì các bạn <a href="https://www.facebook.com/tran.binhan">kết nối với mình</a> để thảo luận thêm nhé.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-06-03_ban_tin_swift_vietnam_so_3</guid><title>Bản tin Swift Việt Nam #3</title><description>Bản tin Swift Việt Nam #3</description><link>https://swiftvietnam.com/posts/2020-06-03_ban_tin_swift_vietnam_so_3</link><pubDate>Wed, 3 Jun 2020 23:21:00 +0800</pubDate><content:encoded><![CDATA[<h1>Bản tin Swift Việt Nam #3</h1><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/swiftvietnam_3.png" alt="3"/><p>Vậy là chúng ta đã bước sang tháng 6, tháng của WWDC. Lần đầu tiên WWDC được tổ chức online, vẫn chưa biết Apple sẽ tổ chức WWDC như thế nào. Rất nhiều sự kiện tổ chức thường niên song song với WWDC cũng đã được <a href="https://twitter.com/subdigital/status/1265724374642024448">chuyển lên online</a>.</p><p>Với việc WWDC20 đang tiến đến rất gần, có 1 điều chắc chắn là Apple sẽ mang đến nhiều cải tiến cho các framework như SwiftUI và Combine. Các project mới sẽ bắt đầu sử dụng các công nghệ này nhiều hơn. Nếu các bạn vẫn còn đang chần chừ trong việc tìm hiểu SwiftUI và Combine thì bây giờ là lúc nên bắt đầu. Bài viết này cũng sẽ tập trung cung cấp cho các bạn nhiều thông tin về SwiftUI và Combine nhằm giúp các bạn chuẩn bị tốt nhất cho WWDC20.</p><p>Tuần này có thêm 1 sự kiện nữa là nhiều người làm công nghệ cũng hưởng ứng phong trào #BlackLivesMatter nên họ quyết định ít chia sẻ về tech hơn mà dành nhiều thời gian nói về sự kiện chính trị này nên mình cũng không thu thập được nhiều thông tin như các số trước.</p><h1>Tin Tức</h1><h2>Swift AWS Lambda Runtime</h2><p>Thông tin đáng chú ý nhất về Swift trong tuần vừa rồi là việc Amazon AWS đã chính thức hỗ trợ sử dụng <a href="https://github.com/swift-server/swift-aws-lambda-runtime/">Swift cho dịch vụ AWS Lambda</a>.</p><p>AWS Lamda là dịch vụ serverless của AWS. Bạn có thể viết một function làm một công việc nhất định trong một thời gian ngắn mà không phải lo việc maintain cả 1 server. AWS Lamda sẽ lo phần infrastructure hết cho ban.<br>Bạn có thể xem ví dụ Hello World trong hình.</p><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/awslambda.png" alt="aws"/><p>Chi tiết xem thêm tại <a href="https://swift.org/blog/aws-lambda-runtime/">blog</a> nhé.</p><h2>LlBuild2</h2><p>Nếu bạn là iOS developer thực thụ, đã làm việc với các ứng dụng lớn, chắc chắn các bạn sẽ hiểu là swift compiler chậm như thế nào nếu app của bạn đủ lớn. Apple tuần vừa rồi có thông báo là học đang thử nghiệm một build system mới cho Swift compiler có tên là <a href="https://forums.swift.org/t/llbuild2/36896">llbuild2</a>. Mục đích của llbuild2 là thử nghiệm các API mới, ứng dụng các thư viện từ ecosystem để cải thiện tốc độ build. Nói chung cái này khá là low-level, thích hợp cho các bạn nào thích tọc vạch và tự build swift complier cho riêng mình :). Chi tiết các bạn có thể đọc thêm tại <a href="https://forums.swift.org/t/llbuild2/36896">diễn đàn</a>.</p><h2>Sách miễn phí Understanding Swift</h2><p>Anh bạn <a href="https://www.hackingwithswift.com/">Paul Hudson</a> tuần vừa rồi mới cho ra lò sách <a href="https://www.hackingwithswift.com/">Understanding Swift</a> miễn phí. Sách này trả lời các câu hỏi thường gặp cho những ai học Swift như lúc nào thì nên dùng <code>struct</code> thay cho <code>class</code> etc... Cuốn sách này theo mình thích hợp cho các bạn đang ở trình đồ beginner đến intermediate.</p><p>Ngoài cuốn sách này, anh Paul Hudson còn rất nhiều ấn phẩm miễn phí khác phục vụ cho việc học Swift như <a href="https://www.hackingwithswift.com/100/swiftui">"100 ngày SwiftUI"</a> hay <a href="https://apps.apple.com/us/app/unwrap/id1440611372">app Unwrapped</a> dạy Swift từ căn bản. Nói chung các bạn cứ lên trang hackingwithswift.com sẽ tìm thấy nhiều thông tin bổ ích.</p><h1>Apple</h1><h2>Zero-day in Sign in with Apple</h2><p>Apple vừa có một lỗi khá nghiêm trọng với chức năng "Sign in with Apple" khiến account của người dùng có thể bị chiếm đoạt dễ dàng. Anh bạn <a href="https://bhavukjain.com/about/">Bhavuk Jain</a> là người phát hiện ra lỗ hổng này và đã được Apple thưởng cho 100,000$ 😯. Bạn có thể đọc thêm về lỗ hổng này ở trên <a href="https://bhavukjain.com/blog/2020/05/30/zeroday-signin-with-apple/">blog của Jain</a>.</p><h1>Bài viết</h1><h2>SwiftUI DSL hoạt động như thế nào?</h2><p>Bạn Harshil Shah có <a href="https://harshil.net/blog/swiftui-dsl-function-builders">bài viết</a> giải thích cách hoạt động của SwiftUI DSL (domain specific language). Nếu các bạn nhìn thấy code SwiftUI khi vừa học Swift thì các bạn sẽ thấy rất lạ lẫm vì syntax trông không giốngs Swift lắm. Bài viết sẽ giải thích DSL của SwiftUI, tại sao chúng ta lại viết được SwiftUI như cách đó, Swift Evolution nào được Apple cập nhật để hỗ trợ cho việc viết SwiftUI. Theo cá nhân mình, việc hiểu về DSL của SwiftUI không phải là điều bắt buộc phải biết khi bạn học SwiftUI, nhưng biết về nó sẽ giúp bạn học SwiftUI nhanh hơn.</p><h2>MVI, MVP, MVVM và SwiftUI</h2><p>MVI (Model-View-Intent) là một kiến trúc khá phổ biến bên Android, nhưng tương đối xa lại bên iOS. MVP (Model-View-Presenter) thì có phổ biến hơn, được dùng nhiều trong các app sử dung UIKit. Tuần vừa rồi mình có đọc<a href="https://medium.com/better-programming/mvi-architecture-for-swiftui-apps-cff44428394"> một bài viết phân tích việc sử dụng MVI</a> và <a href="https://lascorbe.com/posts/2020-04-27-MVPCoordinators-SwiftUI-part1/">một bài viết khác sử dụng MVP</a> cho ứng dụng viết bằng SwiftUI. Nếu các bạn còn nhớ trong <a href="https://swiftvietnam.com/posts/2020-05-20_ban_tin_swift_vietnam_so_1/">bản tin số 1</a> và <a href="https://swiftvietnam.com/posts/2020-05-27_ban_tin_swift_vietnam_so_2/">bản tin số 2</a> mình có giới thiệu 2 kiến trúc <a href="https://github.com/pointfreeco/swift-composable-architecture">The Composable Architecture</a> và <a href="https://arch.bow-swift.io/">Bow-Arch</a> dựa trên kiến trúc unidirectional. Tất nhiên nếu bạn đã quen với MVVM cho app sử dụng UIKit, bạn có thể tiếp tục sử dụng kiến trúc này với <a href="https://medium.com/flawless-app-stories/mvvm-in-swiftui-8a2e9cc2964a">SwiftUI và Combine</a>. Mình có làm một ứng dụng mẫu để trình diễn MVVM cho SwiftUI <a href="https://github.com/antranapp/PixabaySwiftUICombine">tại đây</a>. Bạn có thể tham khảo những bài viết này để tìm ra kiến trúc thích hợp cho ứng dụng của mình nhé.</p><h2>Responsive design with UIStackView</h2><p><code>UIStackView</code> là một công cụ khá hữu ích nếu các bạn sử dụng Auto layout. Bạn <a href="https://sarunw.com/">Sarun Wongpatcharapakorn</a> có một bài viết khá hữu ích hướng dẫn cách sử dụng <code>UIStackView</code> để thiết kế app responsive, hoạt động tốt trên các thiết bị có các size classes khá nhau. Các bạn xem chi tiết <a href="https://sarunw.com/posts/responsive-design-with-uistackview">tại đây</a>.</p><h1>Công cụ</h1><h2>iOS Dev Search</h2><p>Nếu các bạn là người tò mò và muốn đọc nhiều bài viết về iOS development, các bạn có thể truy cập trang <a href="https://iosdevsearch.com/">iOS Dev Search</a>. Trang web này tổng hợp link từ hơn 550 blogs liên quan đến iOS development. Danh sách các blog này các bạn có thể xem trên <a href="https://iosdevdirectory.com/">iOS Dev Directory</a>. Happy reading :)</p><h2>WWDC cho MacOS</h2><p>Nếu các bạn muốn xem lại các videos của các kỳ WWDC trước offline trên máy Mac của mình thì app <a href="https://wwdc.io/">WWDC for MacOS</a> là công cụ không thể thiếu. Videos được phân loại theo năm và chủ đề. Tuần này, bạn <a href="https://rambo.codes/">Rambo</a> đã cập nhật công cụ này lên phiên bản 7 và có thê chức năng community để chia sẻ tin tức của cộng đồng.</p><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/wwdcio.png" alt="wwdcio"/><p>Tranh thủ quảng cáo một tí, mình cũng có làm một app có tên là <a href="https://swiftcommunity.app/">SwiftCommunity</a>, <a href="https://github.com/superarcswift/SwiftCommunity">mã nguồn mở</a>.</p><img src="https://raw.githubusercontent.com/SwiftVietnam/SwiftVietnam/master/Output/Images/swiftvietnam/swiftcommunity.png" alt="swiftcommunity"/><h1>Vui</h1><p>Bạn nào sử dụng Windows bây giờ thì <a href="https://twitter.com/daniel_duan/status/1266052118462394368">không còn lý do gì</a> để không học Swift nữa nhé 😉.</p><h1>Lời cuối</h1><p>Thực ra tuần này mình khá bận với công việc, nhưng mình vẫn cố gắng viết cho xong bài này để đăng kịp vào thứ 4. Vấn đề là mình không có gì để viết mà là mình thấy viết bài kỹ thuật bằng tiếng Việt quả thật không phải đơn giản. Thế nên các bạn thông cảm nếu mình sử dụng nhiều từ tiếng Anh nhé vì mình khá lười dịch nó sang tiếng Việt :D.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-05-27_ban_tin_swift_vietnam_so_2</guid><title>Bản tin Swift Việt Nam #2</title><description>Bản tin Swift Việt Nam #2</description><link>https://swiftvietnam.com/posts/2020-05-27_ban_tin_swift_vietnam_so_2</link><pubDate>Wed, 27 May 2020 01:28:00 +0800</pubDate><content:encoded><![CDATA[<h1>Bản tin Swift Việt Nam #2</h1><p>Mở đầu xin cảm ơn sự khích lệ của các bạn cho <a href="https://swiftvietnam.com/posts/2020-05-20_ban_tin_swift_vietnam_so_1">"Bản tin Swift #1"</a>. Mình rất vui vì bài viết đưa lại một số thông tin bổ ích cho các bạn. Mình muốn nhấn mạnh 1 lần nữa là mình muốn xây dựng <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Swift Việt Nam</a> thành một cộng đồng mạnh để lập trình viện Swift Việt Nam có thể khẳng định mình với bạn bè thế giới. "Bản tin Swift" là một trong những project để tiến tới mục tiêu đó. Mình rất mong muốn có thêm sự đóng góp của những ai tâm huyết với dự án này. Toàn bộ mã nguồn trang web <a href="https://swiftvietnam.com">https://swiftvietnam.com</a> được hosted tại <a href="https://github.com/SwiftVietnam/SwiftVietnam">Github</a>. Mình sử dụng Github Issues để tổng hợp <a href="https://github.com/SwiftVietnam/SwiftVietnam/issues/1">thông tin cho bài viết này</a>.</p><h1>Tin Tức</h1><h2>Swift 5.2.4</h2><p>Swift 5.2.4 đã được phát hành vào ngày 20.5. Ngoài việc hỗ trợ Xcode 11.5 cho MacOS, phiên bản này hỗ trợ thêm các Linux distro mới như CentOS 8, Amazon Linux 2.</p><p>Các bạn xem thêm chi tiết <a href="https://swift.org/download/#releases">tại đây</a></p><h2>Tiến tới Swift 5.3</h2><p>Trong <a href="https://swiftvietnam.com/posts/2020-05-20_ban_tin_swift_vietnam_so_1/">bản tin #1</a>, mình đã giới thiệu các tính năng mới sẽ có mặt trong phiên bản Swift tiếp theo. Trên trang blog Swift.org, chúng ta có thể xem chi tiết <a href="https://swift.org/blog/5-3-release-process/">quy trình phát hành của Swift 5.3</a>. Nếu không có gì bất ngờ, mình dự đoán phiên bản Swift 5.3 sẽ được phát hành cùng với Xcode 12 và iOS 14 sau WWDC20.</p><h2>[SE-0283] Tuples Conform to <code>Equatable</code>, <code>Comparable</code>, and <code>Hashable</code> được chấp nhận.</h2><p><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0283-tuples-are-equatable-comparable-hashable.md"><code>SE-0283</code></a> đã được chấp nhận và sẽ được tích hợp vào phiên bản Swift tiếp theo trong tương lại. Cái SE này sẽ giúp bạn tiết kiệm được rất nhiều boilerplate code khi sử dụng Tuple và muốn conform <code>Equatable</code>, <code>Comparable</code>, hay <code>Hashable</code> bởi vì Swift sẽ tự động infer nếu tất cả các types sử dụng trong tuple conforms với <code>Equatable</code>, <code>Comparable</code>, hay <code>Hashable</code> thì Tuple sẽ tự động conforms với các protocol này, rất hữu ích 👍.</p><h1>Bài viết</h1><h2>Mã nguồn app Telegram</h2><p>Ở VN dùng nhiều Zalo nhưng mình sống ở Đức nơi mọi người rất chú ý vấn đề bảo mật nên app <a href="https://telegram.org/">Telegram</a> cũng khá phổ biến. App này <a href="https://github.com/TelegramMessenger/Telegram-iOS">mã nguồn mở trên github</a> để mọi người có thể audit tính bảo mật. Thế nhưng với hơn 200 modules và hơn 2 triệu dòng code, việc đọc hiểu mã nguồn không phải là việc đơn giản. Rất may bạn <a href="https://medium.com/@BoHu">Bo Hu</a> trên Medium có làm một serie bài viết walk through mã nguồn của app Telegram. Bài viết rất đáng tham khảo nếu các bạn muốn biết cách cấu trúc mã nguồn và xây dựng kiến trúc cho một ứng dụng lớn. Mời các bạn tham khảo <a href="https://medium.com/@BoHu/source-code-walkthrough-of-telegram-ios-part-1-adee673e2202">phần 1</a>, <a href="https://medium.com/@BoHu/source-code-walkthrough-of-telegram-ios-part-2-ssignalkit-afdf35ff60ba">phần 2</a>, <a href="https://medium.com/@BoHu/source-code-walkthrough-of-telegram-ios-part-3-other-foundations-66ace05954a4">phần 3</a> của series này.</p><h1>Mã nguồn</h1><h2>Bow Arch</h2><p>Trong <a href="https://swiftvietnam.com/posts/2020-05-20_ban_tin_swift_vietnam_so_1/">Bản tin Swift Việt Nam số #1</a> mình có giới thiệu kiến trúc mã nguồn mở <a href="https://github.com/pointfreeco/swift-composable-architecture">The Composable Architecture</a>. Đây là một kiến trúc uni-directional (kiểu Redux - React) thích hợp dùng để xây dựng ứng dụng lớn bằng cách chia nhỏ nó ra thành các component nhỏ hơn. Tình cờ trong tuần vừa rồi các bạn bên <a href="https://bow-swift.io">bow-swift</a> cũng giới thiệu một kiến trúc uni-directional tương tự như TCA có tên là <a href="https://github.com/bow-swift/bow-arch">bow-arch</a>. Bow Arch được xây dựng dựa trên thư viện <a href="https://github.com/bow-swift/bow">Functional Programming Bow</a>, được xây dựng dựa trên các <a href="https://github.com/bow-swift/bow-arch#-principles">nguyên tắc</a>:</p><ul><li>🎨 View as a function of state</li><li>🚧 Clear separation of concernsecific concern, and lets us separate how our code deals with different aspects of - application development.</li><li>📦 Modularity</li><li>✅ Testability</li><li>🧩 Highly polymorphic</li><li>🧮 Mathematical background</li></ul><p>Mình chưa có cơ hội để thử nghiệm kiến trúc này. Nếu bạn nào đã thử làm việc với kiến trúc này và muốn chia sẻ kinh nghiệm với cộng đồng thì <a href="https://twitter.com/antranapp">liên lạc với mình</a> nhé. Chi tiết về Bow Arch, các bạn có thể xem trên <a href="https://arch.bow-swift.io/">trang chủ</a>.</p><h2>Nuke 9.0</h2><p>Chắc hẳn mọi người ai cũng đã từng phải tải ảnh hoặc video từ remote servers và lưu lại cho các lần sử dụng sau trong ứng dụng của mình. <a href="https://github.com/onevcat/Kingfisher">Kingfisher</a> là thư viện khá nổi tiếng và phổ biến cho tác nghiệp này. Thế nhưng tuần này Kingfisher đã có một đối thủ đáng gờm, đó là thư viện Nuke, phát triển bởi <a href="https://twitter.com/a_grebenyuk">Alexander Grebenyuk</a>. Với phiên bản <a href="https://kean.github.io/post/nuke-9">9.0</a> (phiên bản này được phát triển trong 5 năm 🤯), Nuke hỗ trợ SwiftUI và Combine, có nhiều API mới, hỗ trợ nhiều định dạng ảnh mới, decode và process ảnh nhanh hơn etc.. Mọi thông tin chi tiết các bạn tham khảo trên <a href="https://kean.github.io/nuke">trang chủ của dự án</a> hoặc tham khảo <a href="https://github.com/kean/Nuke">mã nguồn</a> nhé.</p><h2>CombinePlaygrounds - Using Combine.</h2><p>Sắp WWDC20 rồi, Apple chắc chắn sẽ có nhưng nâng cấp đáng kể cho <a href="https://developer.apple.com/documentation/swiftui">SwiftUI</a> và <a href="https://developer.apple.com/documentation/combine">Combine</a> frameworks. Nếu bạn nào vẫn chưa có ý định học về SwiftUI và Combine thì có lẽ các bạn nên bắt đầu từ bây giờ. Mình tin rằng các dự án apps trong tương lại sẽ chủ yếu được xây dựng bằng 2 công nghệ này. Nếu bạn nào đã từng sử dụng các thử viện như <a href="https://github.com/ReactiveX/RxSwift">RxSwift</a> hay <a href="https://github.com/ReactiveCocoa/ReactiveSwift">ReactiveSwift</a> thì việc học Combine cũng hiểu <a href="http://reactivex.io/">Reactive Programming</a> sẽ đơn giản hơn. Nhưng nếu bạn chưa có nhiều kinh nghiệm với Reactive Programming thì việc hiểu các concept về xử lý dòng dữ liệu cũng như high-order functions không phải là chuyện một sớm một chiều. Anh bạn <a href="https://twitter.com/DenisPoifol">Denis Poifol</a> có làm một playground để giới thiệu về Combine <a href="https://github.com/denisPoifol/CombinePlaygrounds">tại đây</a>. Đọc code trên Playgrounds sẽ giúp bạn vừa hiểu về lý thuyết, lại vừa nhìn được code nên sẽ dễ tiếp thu được kiến thức hơn. Sau khi đọc xong cái Playgrounds trên và nắm được kiến thức cơ bản về Combine, mình recommend các bạn đọc tiếp trang <a href="https://heckj.github.io/swiftui-notes/">Using Combine</a> để tìm hiểu sau hơn nữa về Combine.</p><h1>Video</h1><h2>Machine Learning meets iOS</h2><p>Machine Learning đang là một mảng phát triển rất mạnh, đặc biết là ở trên các thiết bị cuối như iPhone, iPad khi mà khả năng xử lý của các thiết bị này ngày càng tăng. Có nhiều cách để ứng dụng Machine Learning trên iOS, nhưng cách phổ biến nhất là sử dụng <a href="https://developer.apple.com/documentation/coreml">CoreML</a>. Anh <a href="http://atoapps.com/">Minh Nguyễn</a>, Senior iOS Developer của công ty <a href="https://boot.AI">boot.AI</a> có trình bày trong video <a href="https://www.facebook.com/bootAI.RD.Center/videos/170997990820962">"Machine Learning meets iOS"</a> những ứng dụng cơ bản của CoreML cũng như 1 use case đo nhiệt độ cơ thể thông qua xử lý ảnh (rất quan trọng trong thời dịch Covid-19 :)). Các bạn có thể theo dõi video <a href="https://www.facebook.com/bootAI.RD.Center/videos/170997990820962">tại đây</a>.</p><h2>CS193p - Developing Apps for iOS</h2><p>Hai videos tiếp theo của serie <a href="https://cs193p.sites.stanford.edu/">học lập trình iOS với SwiftUI</a> của trường đại học Stanford đã được cập nhật trên Youtube.</p><ul><li><a href="https://www.youtube.com/watch?v=SIYdYpPXil4">Reactive UI Protocols Layout</a></li><li><a href="https://www.youtube.com/watch?v=eHEeWzFP6O4">Grid enum Optionals</a></li></ul><h2>Apps for All: Making Software Accessible</h2><p>Ngày 21.05.2020 vừa rồi là ngày "Global Accessibility Awareness Day" (mình chả biết dịch cái này sang tiếng Việt thế nào cho đúng 🤷‍♂️). Ý tưởng là khuyến các nhà phát triển các ứng dụng điện tử (apps, website, electronic devices etc... ) hãy để ý đến cả những người bị tàn tật hoặc khó tiếp cận các sản phẩm này hơn những người dùng bình thường khác. Chủ đề này có lẽ không phổ biến ở Việt Nam, nhưng ở Châu Âu và ở Mỹ, các yêu cầu này khá quan trọng. Mình đã từng phải ngồi hàng tuần đề test cái app của công ty bằng cách bịt mắt chỉ nghe voice over và sử dụng app để hoàn thiện phần accessiblity. Apple cũng cung cấp rất nhiều <a href="https://developer.apple.com/accessibility/">API</a> và tutorials trong app <a href="https://apps.apple.com/de/app/apple-developer/id640199958">Apple Developer</a> cho tác vụ này. Anh bạn <a href="https://www.youtube.com/user/magicpop">Matthew Bischoff</a> có <a href="https://www.youtube.com/watch?v=LHHmx5XxIBc">một video rất hay</a> về chủ đề này, mới các bạn tham khảo nhé.</p><h1>Soft Skills</h1><p>Đa số lập trình viên như chúng ta thường thích viết code hơn là đi nói chuyện với người hoặc làm các công việc không liên quan đến code. Rất tiếc là để làm được một ứng dụng nhiều người yêu thích và sử dụng bây giờ, chúng ta cần đầu tư vào nhiều skills khác nhau nữa như thiết kế, quản lý dự án, marketing etc.. Mình sẽ giới thiệu một số bài viết liên quan đến chủ đề này tại đây để các bạn tham khảo.</p><h2>Building a Design System for iOS</h2><p>Nếu các bạn làm việc ở các công ty lớn một chút, họ sẽ có đội ngũ thiết kế riêng và thường học sẽ có một Design System để sử dụng cho các sản phẩm của mình. Ví dụ như AirBnB, học có cả <a href="https://airbnb.design/">một trang web chuyên về ngôn ngữ thiết kế</a> của riêng mình. Các bạn chắc hẳn sẽ thắc mắc, vậy Design System là gì, làm sao để lập trình viên như chúng ta có thể hiểu và thậm chí tự tạo cho mình một design system riêng, làm sao chúng ta có thể biên dịch cái design system này từ Photoshop, Sketch, Figma hay bất kỳ một chương trình thiết kế nào sang Swift. Anh bạn <a href="https://www.ramshandilya.com/">Ram Shandilya</a> tuần vừa rồi có một series bài viết giới thiệu về Design System khá hay và dễ hiểu. Các bạn có thể tham khảo từ <a href="https://www.ramshandilya.com/blog/design-system-intro/">phần 1</a> nhé. Các bạn cũng có thể tham khảo thêm <a href="https://www.youtube.com/watch?v=Fvq8PQKJj_k&t=1053s">video này</a> để xem một cách tiếp cận Design System bằng Swift tương tự nhé.</p><h1>Apple</h1><h2>iOS 13.5</h2><p>Tuần vừa rồi Apple đã phát hành phiên bản iOS 13.5, nhận diện khẩu trang, nhưng quan trọng nhất là <a href="https://developer.apple.com/documentation/exposurenotification">Exposure Notification Framework</a> dành cho các app contact tracing phòng chống Covid-19. Apple thậm chí còn phát hành <a href="https://developer.apple.com/documentation/exposurenotification/building_an_app_to_notify_users_of_covid-19_exposure">mã nguồn</a> một ứng dụng mẫu sử dụng ENF.</p><p>Về mặt kỹ thuật, nguyên tắc ENF hoạt động tương đối giống các app contract tracing phát hanh trước dây như tracetogether của Singapore hoặc bluezone của Việt Nam: trao đổi anonymized IDs qua giao thức bluetooth giữa các máy tiếp xúc gần nhau. Nhưng với việc ENF được tích hợp trực tiếp vào hệ thống, các app sử dụng không phải luôn luôn mở ở foreground nữa mà có thể hoạt động ở background. Ngoải ra ENF cũng tương thích với một framework tương tự bên Android. Mình thấy việc Apple và Google bắt tay nhau phát triển ENF là một điều tuyệt vời, giúp giảm thiểu việc có quá nhiều protocols được phát triển độc lập không tương thích với nhau. Với việc là official framework của iOS và Android, người dùng cũng sẽ tin tưởng hơn và sẽ sử dụng các apps contract tracing nhiều hơn, dẫn đến nâng cao hiệu quả của việc chống dịch.</p><h2>Uncover Jailbreak</h2><p>Rất lâu rồi mình không jailbreak iPhone của mình nữa vì mình cũng không còn thời gian nghịch ngợm các Tweaks trên Cydia nữa. Nhưng gần đây có, cộng động Jailbreak lại dậy sóng vì tool <a href="https://unc0ver.dev/">unc0ver</a> có phát hiện ra lỗ hổng nào đó mà có thể jailbreak các phiên bản iOS từ iOS 11.0 đến 13.5.</p><p>Nói chung việc jailbreak hay không thì mỗi người có một ý kiến riêng. Bản thân mình sẽ không tọc mạch cái jailbreak này vì có nhiều thông tin các nhân trên điện thoại và mình không muốn bypass các security machanism của iOS khiến cho các thông tin cá nhân đó có thể bị lấy mất.</p><p>Ở Việt Nam mọi người thì chủ yếu jailbreak để dùng app chùa. Thế nhưng cũng có một số "ích lợi" khác cho việc jailbreak là dùng các Tweaks để nâng cấp một số tính năng cho iOS mà bạn không thể làm được nếu không jailbreak. Anh bạn <a href="https://twitter.com/steipete">Peter Steinberger</a> có bài viết tổng hợp pros và cons của việc jailbreak cũng như hướng dẫn jailbreak sử dụng tool unc0ver <a href="https://steipete.wtf/posts/jailbreaking-for-ios-developers/">tại đây</a>.</p><h2>iOS 14</h2><p>Chỉ còn chưa đến 1 tháng nữa là đến WWDC và gần như chắc chắn Apple sẽ giới thiệu iOS 14 với nhiều tính năng mới tại hội nghị này. Tuy nhiên những phiên bản đầu tiền của iOS 14 hiện đã bị leak ra ngoài và rất nhiều hacker và security researchers đang bắt đầu nghiên cứu tìm lỗ hổng của phiên bản iOS mới này. <a href="https://www.vice.com/en_us/article/5dzpxz/how-iphone-hackers-got-hands-on-new-ios-14-months-before-realease">Vice</a> có bài phân tích khá hay về thị trường đen buôn bán trao đổi các thông tin leak về các hệ điều hành của Apple.</p><p>Bên <a href="https://www.macrumors.com/2020/05/21/airpods-pro-assembled-vietnam/">9to5mac</a> cũng có tổng hợp các thông tin về phiên bản iOS 14 để các bạn tham khảo.</p><h1>Công cụ</h1><h2>Piranha</h2><p>Nếu các bạn đã từng làm feature flags, A/B Testings trong app của mình, chắc hẳn các bạn sẽ phải đi dọn dẹp các code thừa sau khi thí nghiệm A/B Testing thực hiện xong hoặc feature được rollout cho toàn bộ users của mình. Thường thì công việc này khá nhàm chán (ai lại thích đi xoá code đâu) nên rất nhiều teams lười cứ để code chết ở trong projects của mình. Thế nhưng nếu các bạn kỹ sư của Uber cũng lười như vậy thì chắc project của họ với hơn <a href="https://www.infoq.com/news/2020/04/uber-piranha-unreachable-code/">6000 feature flags</a> sẽ trở thành một mớ hỗn độn mất. Có lẽ chính vì thế mà Uber đã giới thiệu tool <a href="https://github.com/uber/piranha">Piranha</a> để hỗ trợ việc dọn dẹp các feature flags trong ứng dụng của mình. Giải thích đơn giản là bạn nhập tên của flag và expected behaviours, Piranha sẽ nghiêm cứu cấu trúc của mã nguồn và nhận biết các pattern liên quan đến cái feature flag đó và thay đổi và dọn dẹp các code không cần thiết cho chúng ta. Hy vọng sau đó projects của chúng ta vẫn dịch được và các tests đều mầu xanh :). Các bạn tham khảo thêm về Piranha tại <a href="https://eng.uber.com/piranha/">bài giới thiệu</a> hoặc tham khảo trực tiếp <a href="https://github.com/uber/piranha">mã nguồn</a> nhé.</p><h1>Vui</h1><p>Các bạn thấy có giống nhau không 😆</p><img src="https://github.com/SwiftVietnam/SwiftVietnam/blob/master/Output/Images/swiftvietnam/swift_communism.jpeg?raw=true" alt="swift_communism"/><h1>Lời cuối</h1><p>Chỉ còn vài tuần nữa là WWDC20 sẽ diễn ra với rất nhiều thông tin liên quan đến Swift và Apple Ecosystem. Nếu các bạn hoặc công ty các bạn có sự kiện gì liên quan đến WWDC20 và muốn thông tin đến cộng đồng lập trình viên Swift, các bạn có thể liên lạc với mình qua <a href="https://twitter.com/antranapp">twitter</a>, hoặc <a href="https://github.com/antranapp">Github</a>, hoặc trực tiếp trên <a href="https://github.com/SwiftVietnam/SwiftVietnam">trang Github của Swift Việt Nam</a>, mình sẽ thông báo tin tức đấy vào bản tin Swift Việt Nam tiếp theo.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về Swift và cộng đồng lập trình viên Swift Việt Nam nhé.</p><p>Links:</p><ul><li>Mã nguồn bài viết: <a href="https://github.com/SwiftVietnam/SwiftVietnam/blob/master/Content/posts/2020-05-27_ban_tin_swift_vietnam_so_2.md">https://github.com/SwiftVietnam/SwiftVietnam/blob/master/Content/posts/2020-05-27<em>ban</em>tin<em>swift</em>vietnam<em>so</em>2.md</a></li><li>Tổng hợp thông tin có bài số #3: <a href="https://github.com/SwiftVietnam/SwiftVietnam/issues/2">https://github.com/SwiftVietnam/SwiftVietnam/issues/2</a></li></ul>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-05-20_ban_tin_swift_vietnam_so_1</guid><title>Bản tin Swift Việt Nam #1</title><description>Bản tin Swift Việt Nam #1</description><link>https://swiftvietnam.com/posts/2020-05-20_ban_tin_swift_vietnam_so_1</link><pubDate>Wed, 20 May 2020 01:28:00 +0800</pubDate><content:encoded><![CDATA[<h1>Bản tin Swift Việt Nam #1</h1><p>Xin chào mừng các bạn đến số đầu tiên của <strong>"Bản tin Swift"</strong>. Tự giới thiệu mình tên là An, hiện đang làm iOS Engineer ở Đức. Tại <strong>"Bản tin Swift"</strong> mình sẽ tổng hợp các thông tin mới nhất liên quan đến ngôn ngữ lập trình Swift, về Apple ecosystem và về các vấn đề liên quan đến phát triển ứng dụng cho Apple platforms.</p><p>Có nhiều lý do tại sao mình lại bắt đầu <strong>"Bản tin Swift"</strong>:</p><ul><li>Mình viết Swift hàng ngày, cả ở công việc lẫn hobby :)</li><li>Mình thích Swift và thường xuyên đọc nhiều thông tin về Swift.</li><li>Mình thích viết app cho Apple platforms.</li><li>Mình muốn chia sẻ kiến thức và thông tin mình cập nhật được với nhiều người.</li><li>Minh muốn kết nối cộng đồng lập trình viên iOS Việt Nam để chúng ta có thể chia sẻ thông tin, cơ hội làm việc cũng như cùng nhau phát triển.</li></ul><p>Các bạn có thể truy cập trang web chính của <strong>"Bản tin Swift"</strong> tại: <a href="https://swiftvietnam.com">https://swiftvietnam.com</a></p><h1>Tin tức</h1><h2>Swift 5.3 có gì mới?</h2><p>Anh bạn <a href="https://twitter.com/twostraws">Paul Hudson</a> có tổng hợp những Swift Evolution đã được implemented trong phiên bản <a href="https://swift.org/blog/5-3-release-process/">Swift 5.3</a>. Các bạn có thể xem <a href="https://www.whatsnewinswift.com/?from=5.2&to=5.3">tại đây</a> để biết thêm chi tiết. Các bạn cũng có thể tải <a href="https://www.whatsnewinswift.com/files/playground-5-2-to-5-3.playground.zip">playground</a> này xuống để xem trực tiếp code.</p><p>Mình tóm lược các Swift Evolution đã được cập nhật trong Swift 5.3:</p><ul><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0276-multi-pattern-catch-clauses.md">SE-0276</a> Multi-pattern catch clauses: bắt nhiều exceptions trong cùng một lúc.</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0279-multiple-trailing-closures.md">SE-0279</a> Multiple trailing closures: cái SE này bị cộng đồng chỉ trích khá nhiều vì chẳng có ích mấy mà còn làm code khó đọc hơn. Nhưng mình dự đoán là Apple sẽ giới thiệu 1 cái gì đó ở WWDC mà cái SE sẽ makes sense.</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0266-synthesized-comparable-for-enumerations.md">SE-0266</a> Synthesized Comparable conformance for enums: so sánh các case trong một enum nếu enum conform to <code>Comparable</code></li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0269-implicit-self-explicit-capture.md">SE-0269</a> <code>self</code> is no longer required in many places: bớt phải viết <code>self</code> nếu Compiler có thể đảm bảo là không thể có reference cycle. Đặc biệt hữu dụng khi dùng <code>SwiftUI</code> hay <code>Combine</code></li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0281-main-attribute.md">SE-0281</a> Type-Based Program Entry Points</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0267-where-on-contextually-generic.md">SE-0267</a> <code>where</code> clauses on contextually generic declarations</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0270-rangeset-and-collection-operations.md">SE-0270</a> New collection methods on noncontiguous elements</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0268-didset-semantics.md">SE-0268</a> Refined didSet Semantics</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0277-float16.md">SE-0277</a> A new Float16 type</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0271-package-manager-resources.md">SE-0271</a> Swift Package Manager gains binary dependencies, resources, and more: Cái này rất hay vì chúng ta sẽ có thể sử dụng được SPM cho các packge có chứa ảnh, âm thanh, JSON, plist hay bất cứ resource nào khác. Trước đây SPM chỉ hỗ trợ package chứa code thôi.</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0272-swiftpm-binary-dependencies.md">SE-0272</a> Package Manager Binary Dependencies : yay, Google có thể sử dụng SPM để package Firebase được rồi.</li><li><a href="https://github.com/apple/swift-evolution/blob/master/proposals/0273-swiftpm-conditional-target-dependencies.md">SE-0273</a> Package Manager Conditional Target Dependencies: sử dụng các package khác nhau phụ thuộc vào platform.</li></ul><p>Đặc biệt là Swift 5.3 sẽ chính thức hỗ trợ Windows và một số <a href="https://swift.org/blog/additional-linux-distros/">distro Linux khác</a> (hiện chỉ hỗ trợ chính thức Ubuntu). Mình đã dùng Swift 5.2 để tạo <a href="https://swiftvietnam.com">SwiftVietnam</a> trên Linux Ubuntu. Mình có viết về trải nghiệm của mình <a href="https://swiftvietnam.com/posts/2020-19-04_use_publish_to_create_static_websites/">tại đây</a>.</p><h2>Lan truyền lỗi giữa các tầng trong cấu trúc của ứng dụng bằng Swift</h2><p>Anh bạn <a href="https://twitter.com/johnsundell">John Sundell</a> thảo luận về việc propagate lỗi trong các tầng thấp lên tầng trên trong cấu trúc ứng dụng. John cũng giới thiệu kỹ thuật dùng <code>enum</code> để group các lỗi cùng loại cho dễ xử lỹ.</p><p>Các bạn có thể đọc thêm chi tết <a href="https://www.swiftbysundell.com/articles/propagating-user-facing-errors-in-swift/">tại đây</a></p><h1>Video - Audio</h1><h2>CS193p - Developing Apps for iOS</h2><p>Khoá học phát triển ứng dụng iOS nổi tiếng của trường đại học Standford hiện đang được làm mới và sử dụng SwiftUI 100%. Khoá học này hoàn toàn miễn phí, chỉ tiếc là không có chứng chỉ cho những ai không phải là sinh viên của Standford 😔.</p><p>Các bạn có thể xem video của khoá học trên Youtube. Link được cập nhật tại đây: <a href="https://cs193p.sites.stanford.edu/">https://cs193p.sites.stanford.edu/</a></p><h2>App Builders 2020</h2><p><a href="https://appbuilders.ch/">App Builder</a> là một conference về phát triển ứng dụng được tổ chức ở Thuỵ Sĩ. Conference này khá nổi tiếng ở Châu Âu và thường mời được rất nhiều Speakers có uy tín về thuyết trình. Năm nay vì Covid-19 nên họ tổ chức online và videos đã được cập nhật trên Youtube.</p><p>Các bạn xem chi tiết <a href="https://www.youtube.com/watch?v=LpHah3oQeyg&list=PLLcE3DL3f5ByDAucPjzNRG_hPtYDvYlIA">tại đây</a></p><h2>Podcast: Polymorphic interfaces</h2><p>Trong podcast gần đây, John Sundell có phỏng vấn Dave Abrahams, một trong những người tạo ra ngôn ngữ Swift, về "Lập trình hướng Protocol - Protocol-Oriented Programming".</p><p>Nếu bạn chưa biết <strong>Dave Abrahams</strong> là ai hay không biết "Protocol-Oriented Programming" là gì, mình recommend các bạn xem lại video <a href="https://developer.apple.com/videos/play/wwdc2015/408/">Protocol-Oriented Programming in Swift</a> từ WWDC 2015</p><p>Quay lại Podcast của giữ John và Dave, họ thảo luận khá nhiều về tại sao Swift lại nhấn mạnh hướng đối tượng, C++ có ảnh hưởng thế nào đến Swift, Generic Programming là gì và đặc biệt là tại sao Dave không còn làm việc ở Apple nữa.</p><p>Các bạn có thể nghe podcast <a href="https://www.swiftbysundell.com/podcast/71/">tại đây</a></p><h1>Thư viện - Mã nguồn</h1><h2>The Composable Architecture:</h2><p>Nếu các bạn muốn phát triển ứng dụng scalable và maintainable, chắc chắc các bạn sẽ nghĩ đến việc chia nhỏ ứng dụng của mình thành các thành phần nhỏ hơn. Các anh bạn ở <a href="https://pointfree.co">pointfree.co</a> mới phát hành một cấu trúc có tên là <a href="https://github.com/pointfreeco/swift-composable-architecture">The Compossable Architecture</a> (TCA) một vài tuần trước giúp các bạn có thể xây dựng ứng dung (SwiftUI và UIKit) theo cách lắp ghép các thành phần nhỏ lại với nhau.</p><p>Trên <a href="https://www.pointfree.co/">pointfree.co</a> các bạn có thể theo dõi 3 videos gần nhất để xem họ giới thiệu về TCA nhé.</p><p>Đặc biệt nếu bạn muốn học thêm về Functional Programming và xem các video (mất tiền) bổ ích khác trên <a href="https://www.pointfree.co/">pointfree.co</a>, đặc biệt là các bạn ở Việt Nam, các bạn có thể xem mình có được <a href="https://www.pointfree.co/subscribe/personal?useRegionalDiscount=true">áp dụng giảm giá</a> không nhé. Điều kiện là bạn trả tiền bằng thẻ tín dụng issued ở Việt Nam.</p><h2>ACHNBrowserUI</h2><p>Mình không chơi Animal Crossing nhưng thấy rất nhiều người đang điên cuồng vì trò chơi này. Nếu bạn đang chơi trò này và muốn học SwiftUI, Combine thì bạn có thể tham khảo cái App <a href="https://github.com/Dimillian/ACHNBrowserUI">ACHNBrowserUI</a> này nhé. Mã mở hoàn toàn. App được viết bởi anh chàng <a href="https://github.com/Dimillian">Thomas Ricouard</a>, người đã gây bão trong cộng đồng Swift vì là một trong những người viết <a href="https://github.com/Dimillian/MovieSwiftUI">ứng dụng bằng SwiftUI đầu tiên</a>.</p><h1>Tools:</h1><h2>Concurrent Carthage</h2><p>Chắc mọi người đã biết và dùng <code>Carthage</code> để quản lý thử viện bên thứ ba cho ứng dụng của mình. Nếu bạn để ý thì <code>Carthage</code> khá là chậm nếu bạn có nhiều dependency. <a href="https://github.com/unchartedworks/ConcurrentCarthage">Concurrent Carthage</a> là một công cụ mới dùng để giúp <code>Carthage</code> sử dụng tối đang các core trên máy tính để tăng tốc.</p><h1>Apple</h1><h2>Apple Glass</h2><p>Anh chàng John Prosser, một leaker về các sản phẩm của Apple khá nổi tiếng, vừa phát hành một video lean về Apple Glass trên <a href="https://www.youtube.com/watch?v=SfjSy6T4iE4">Youtube</a> Apple đầu tư khá nhiều vào AR mấy năm gần đây. Mình sống ở Munich, Đức và là nơi Apple đã <a href="https://techcrunch.com/2015/05/28/apple-metaio/">mua một công ty AR</a>, khởi nguồn cho ARKit và các công nghệ AR của Apple. Mình có dùng một số AR apps trên điện thoại, thực ra cũng không thấy hay lắm. Cái Apple Glass chắc chắn thích hợp cho việc sử dụng app AR hơn là điện thoại.</p><p>Tiện nói về AR, mình có xem <a href="https://arcopypaste.app/">cái demo này</a> rất cool 😉.</p><h1>Vui</h1><p>Các bạn có biết chữ <code>NS</code> (ví dụ trong <code>NSObject</code>) viết tắt cho cái gì không?</p><p>Đáp án <a href="https://twitter.com/manicakes/status/1259851414622425092">ở đây</a> nhé 😉</p><h1>Lời cuối</h1><p>Puh, viết một bài tổng hợp cũng không phải đơn giản. Bây giờ là hơn 1h đêm rồi mà mình vẫn không biết bài viết có đủ thông tin hay ho cho mọi người không. Nhưng giờ thì mệt quá rồi nên mình xin ngừng <s>bút</s> phím ở đây. Hy vọng "Bản Tin Swift" số #1 mang lại cho các bạn một số thông tin hữu ích về cộng đồng Swift thế giới.</p><p>Mục đích chính của SwiftVietnam là community-driven 🤝. Chỉ có vậy chúng ta mới có thể cùng nhau phát triển được. Nếu mọi người muốn đóng góp chia sẻ thông tin cho <strong>"Bản tin Swift #2"</strong> thì mời các bạn vào thảo luận <a href="https://github.com/SwiftVietnam/SwiftVietnam/issues/1">tại đây</a> nhé 💪.</p><p>Mình rất muốn tìm và chia sẻ các thông tin về iOS/Apple/Swift với các bạn lập trình viên Việt Nam. Nếu bạn có ý kiến, ý tưởng, chỉ trích hay đóng góp gì cho bài viết, các bạn có thể liên lạc với mình trên <a href="https://twitter.com/antranapp">Twitter</a> hoặc <a href="https://github.com/antranapp">Github</a>. Rất mong nhận được ý kiến đóng góp của các bạn.</p><p>Các bạn cũng nhớ theo dõi trang <a href="https://www.facebook.com/Swift-Vi%E1%BB%87t-Nam-396835394265318">Facebook Swift Việt Nam</a> để được cập nhật các thông tin mới nhất về <s>Taylor</s> Swift nhé 😋.</p><p>Chào thân ái.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://swiftvietnam.com/posts/2020-04-19_use_publish_to_create_static_websites</guid><title>Publishing a blog using Swift for Linux (Ubuntu 18.04)</title><description>Publishing a blog using Swift for Linux (Ubuntu 18.04).</description><link>https://swiftvietnam.com/posts/2020-04-19_use_publish_to_create_static_websites</link><pubDate>Sun, 19 Apr 2020 21:28:00 +0800</pubDate><content:encoded><![CDATA[<h1>Publishing a blog using Swift for Linux (Ubuntu 18.04)</h1><p><a href="https://github.com/JohnSundell/Publish">Publish</a> is a static site generator built with Swift, created by the famous <a href="swiftbysundell.com">John Sundell</a> to run his blog.</p><p>This tutorial is going to show you how to install Publish on a Linux machine running Ubuntu 18.04 LTS and how to publish the generated site to Github Pages and connect it with a custom domain.</p><p>As you might guess, this blog post is generated by <strong>Publish</strong>, and hosted on Github Pages under the domain <a href="https://swiftvietnam.com">https://swiftvietnam.com</a>. <strong>The project is open-sourced on Github:</strong> <a href="https://github.com/antranapp/swiftvietnam">https://github.com/antranapp/swiftvietnam</a></p><h2>1. Install Swift 5.2.2 on Ubuntu 18.04 LTS</h2><p>The following steps show how to install the currently latest version of Swift 5.2.2 on Ubuntu 18.04 LTS. Since Swift supports other Linux distributions too, you should be able to install Swift on most of the Linux systems.</p><h3>Step 1: Install dependencies</h3><p><code>clang</code> and <code>libicu-dev</code> are required as dependencies for running Swift on Linux machines</p><ul><li><code>clang</code> provides tooling infrastructure for programming languages in the C programming languages. It acts as a compiler.</li><li><code>libicu-dev</code> provides full-featured Unicode and locale support. This allows for Unicode to be used in our code.</li></ul><p>We can install those dependencies by running the following code:</p><pre><code><div class="highlight"><span></span>sudo apt install clang libicu-dev
</div></code></pre><h3>Step 2: Download the Swift binary</h3><p>Apple releases many pre-compiled binary builds for Swift on the official <a href="https://swift.org/download">Swift website</a>.</p><p>We are going to download the build for Ubuntu 18.04 LTS using the following commands and unpack it into <code>swift</code> folder:</p><pre><code><div class="highlight"><span></span>mkdir ~/swift
<span class="nb">cd</span> ~/swift
wget https://swift.org/builds/swift-5.2.2-release/ubuntu1804/swift-5.2.2-RELEASE/swift-5.2.2-RELEASE-ubuntu18.04.tar.gz
tar -xvzf swift-5.2.2-RELEASE*
</div></code></pre><h3>Step 3: Add swift binary to PATH</h3><p>To execute <code>swift</code> command from anywhere, we need to add the path to the <code>swift</code> binary into our PATH environment variable.</p><p>We can find the path to the swift binary using <code>pwd</code> command:</p><pre><code><div class="highlight"><span></span><span class="nb">cd</span> ~/swift/swift-5.2.2-RELEASE-ubuntu18.04/usr/bin
<span class="nb">pwd</span>
</div></code></pre><p>Copy the output of the above command and add it into our <code>PATH</code>, ideally in <code>.bashrc</code> file to keep the change permanently.</p><pre><code><div class="highlight"><span></span><span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$HOME</span>/bin/swift-5.2.2-RELEASE-ubuntu18.04/usr/bin
</div></code></pre><p>Remember to restart the session or run <code>source ~/.bashrc</code> before continue.</p><h3>Step 4: Testing</h3><p>Now you test if you can call <code>swift</code> command.</p><pre><code><div class="highlight"><span></span>swift -v
</div></code></pre><p>The output should be something like:</p><pre><code><div class="highlight"><span></span>Swift version <span class="m">5</span>.2.2 <span class="o">(</span>swift-5.2.2-RELEASE<span class="o">)</span>
Target: x86_64-unknown-linux-gnu
</div></code></pre><h2>2. Install Visual Studio Code plugin (optional)</h2><p>Since Xcode is not available for Linux system, and we are going to build our website using Swift, it would be good if we have some kind of IDE to aid the process.</p><p>Currently, we have 3 options for swift IDEs:</p><ul><li><strong>Option 1</strong>: Using any text editors or IDEs to edit the source code and run <code>swift build</code> or <code>publish generate</code> from command line to build our project. Probably, we will not have any code highlighting, source code references, auto-completion and IDE integrations.</li><li><strong>Option 2</strong>: <a href="https://www.jetbrains.com/clion/">CLion</a> from JetBrains: It is actually a C/C++ IDE but it has a plugin to support Swift source code. All JetBrains IDEs are excellent for sure, but it is not free.</li><li><strong>Option 3</strong>: Using Visual Studio Code together with SourceKit-LSP to have a good enough IDE to start writing and debugging Swift code.</li></ul><p>I'm going to show you how to do the <strong>option 3</strong>: integration of SourceKit-LSP in Visual Studio Code.</p><h3>Step 1: Build SourceKit-LSP</h3><p>Apple announced the SourceKit-LSP in August 2018 and released the open-source project in November 2018. As written in <a href="https://github.com/apple/sourcekit-lsp">its official repository</a>:</p><blockquote><p>SourceKit-LSP is an implementation of the <a href="https://microsoft.github.io/language-server-protocol/">Language Server Protocol</a> (LSP) for Swift and C-based languages. It provides features like code-completion and jump-to-definition to editors that support LSP. SourceKit-LSP is built on top of <code>sourcekitd</code> and <code>clangd</code> for high-fidelity language support, and provides a powerful source code index as well as cross-language support. SourceKit-LSP supports projects that use the Swift Package Manager.</p></blockquote><p>We are going to build <code>SourceKit-LSP</code> from its source, and copy the built binary to <code>/usr/local/bin</code></p><pre><code><div class="highlight"><span></span>git clone https://github.com/apple/sourcekit-lsp.git
<span class="nb">cd</span> sourcekit-lsp
sudo apt install libsqlite3-dev libncurses5-dev
swift build -Xcxx -I<span class="si">${</span><span class="nv">HOME</span><span class="si">}</span>/bin/swift-5.2.2-RELEASE-ubuntu18.04/usr/lib/swift -Xcxx -I<span class="si">${</span><span class="nv">HOME</span><span class="si">}</span>/bin/swift-5.2.2-RELEASE-ubuntu18.04/usr/lib/swift/Block
sudo mv .build/x86_64-unknown-linux-gnu/debug/sourcekit-lsp /usr/local/bin
</div></code></pre><p><strong><em>Note:</em></strong></p><ul><li>You need to use the correct path to your <code>swift</code> binary in the command. I used mine here for easy understanding.</li><li>You might need to install additional dependencies depending on what packages are available on your machines.</li></ul><h3>Step 2: Build VSCode extension</h3><p>If you don't have Visual Studio Code installed yet, please follow <a href="https://code.visualstudio.com/docs/setup/linux">this instruction</a> to install it. The most simple way is to use <code>snap</code></p><pre><code><div class="highlight"><span></span>sudo snap install --classic code
</div></code></pre><p>We also need <code>node</code> and <code>npm</code> to build our custom Visual Studio Code extension. The installation instruction for Ubuntu can be found <a href="https://github.com/nodesource/distributions/blob/master/README.md#debinstall">here</a></p><pre><code><div class="highlight"><span></span>curl -sL https://deb.nodesource.com/setup_12.x <span class="p">|</span> sudo -E bash -
sudo apt-get install -y nodejs
</div></code></pre><p>Now, inside the <code>sourcekit-lsp</code> folder, run the following commands to create and install the extension for Visual Studio Code.</p><pre><code><div class="highlight"><span></span><span class="nb">cd</span> Editors/vscode
npm run createDevPackage 
code --install-extension out/sourcekit-lsp-vscode-dev.vsix
</div></code></pre><h2>3. Install <code>Publish</code></h2><p>We will now install <code>Publish</code> from its <a href="https://github.com/JohnSundell/Publish">source code</a>:</p><pre><code><div class="highlight"><span></span>git clone https://github.com/JohnSundell/Publish.git
<span class="nb">cd</span> Publish
make
</div></code></pre><p>If you get permission errors like this:</p><pre><code><div class="highlight"><span></span>install .build/release/publish-cli /usr/local/bin/publish
install: cannot create regular file <span class="s1">&#39;/usr/local/bin/publish&#39;</span>: Permission denied
Makefile:2: recipe <span class="k">for</span> target <span class="s1">&#39;install&#39;</span> failed
</div></code></pre><p>You should run <code>install</code> command with <code>sudo</code> instead:</p><pre><code><div class="highlight"><span></span>sudo install .build/release/publish-cli /usr/local/bin/publish
</div></code></pre><p>Now if you run <code>publish</code> from the command line. You will see something like this:</p><img src="../../Images/1/publish_installed_successfully.png" alt="preview"/><h2>4. Create a new website</h2><h3>Step 1: Create a new project</h3><p>Now we can use <code>publish</code> command to create a new website:</p><pre><code><div class="highlight"><span></span>mkdir SwiftVietnam
publish new
</div></code></pre><p>Open the newly created folder in Visual Studio Code:</p><pre><code><div class="highlight"><span></span><span class="nb">cd</span> SwiftVietnam
code .
</div></code></pre><p>To connect to the Swift Toolchain and SourceKit-LSP with Visual Studio Code, we need to create some setting files under <code>.vscode</code> in our workspace:</p><ul><li><strong>settings.json</strong>: set the path to the swift tool chain</li></ul><pre><code><div class="highlight"><span></span><span class="p">{</span>
  <span class="nt">&quot;sourcekit-lsp.toolchainPath&quot;</span><span class="p">:</span> <span class="s2">&quot;$HOME/bin/swift-5.2.2-RELEASE-ubuntu18.04/usr/bin&quot;</span>
<span class="p">}</span>
</div></code></pre><p>With this, we will be able to see class references for our Swift code:</p><img src="../../Images/1/publish_vscode.png" alt="preview"/><ul><li><strong>tasks.json</strong>: set the configuration so that we can run the project directly from VSCode by pressing <code>F5</code></li></ul><pre><code><div class="highlight"><span></span><span class="p">{</span>
  <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;2.0.0&quot;</span><span class="p">,</span>
  <span class="nt">&quot;tasks&quot;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&quot;label&quot;</span><span class="p">:</span> <span class="s2">&quot;swift-build&quot;</span><span class="p">,</span> 
      <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;shell&quot;</span><span class="p">,</span> 
      <span class="nt">&quot;command&quot;</span><span class="p">:</span> <span class="s2">&quot;swift build&quot;</span> 
    <span class="p">}</span>
  <span class="p">]</span>
<span class="p">}</span>
</div></code></pre><p>We can also configure the debugger for our Swift project by installing <code>CodeLLDB</code> extension and creating <code>launch.json</code> in <code>.vscode</code> folder:</p><ul><li><strong>launch.json</strong>:</li></ul><pre><code><div class="highlight"><span></span><span class="p">{</span>
  <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;0.2.0&quot;</span><span class="p">,</span>
  <span class="nt">&quot;configurations&quot;</span><span class="p">:</span> <span class="p">[</span>
    <span class="p">{</span>
      <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;lldb&quot;</span><span class="p">,</span> 
      <span class="nt">&quot;request&quot;</span><span class="p">:</span> <span class="s2">&quot;launch&quot;</span><span class="p">,</span>
      <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Debug&quot;</span><span class="p">,</span>
      <span class="nt">&quot;program&quot;</span><span class="p">:</span> <span class="s2">&quot;${workspaceFolder}/.build/debug/SwiftVietnam&quot;</span><span class="p">,</span> 
      <span class="nt">&quot;args&quot;</span><span class="p">:</span> <span class="p">[],</span>
      <span class="nt">&quot;cwd&quot;</span><span class="p">:</span> <span class="s2">&quot;${workspaceFolder}&quot;</span><span class="p">,</span>
      <span class="nt">&quot;preLaunchTask&quot;</span><span class="p">:</span> <span class="s2">&quot;swift-build&quot;</span> 
    <span class="p">}</span>
  <span class="p">]</span>
<span class="p">}</span>
</div></code></pre><p>Now we can use running and debugging capabilities of VSCode for our project: <img src="../../Images/1/publish_debug.png" alt="debugging"/></p><h2>5. Test and publish to Github Pages</h2><h3>Step 1: Testing locally</h3><p>To test the site locally, we can run:</p><pre><code><div class="highlight"><span></span>publish run
</div></code></pre><p>The generated website will be created in the <code>Output</code> folder. And a local server will be started at <code>http://localhost:8000</code>. We can now just open that address in our browser to review the site.</p><img src="../../Images/1/publish_new.png" alt="preview"/><h3>Step 2: Setting up a custom domain</h3><p>If you want to use a custom domain with your Github Pages, please follow the <a href="https://help.github.com/en/github/working-with-github-pages/configuring-a-custom-domain-for-your-github-pages-site">official instruction</a> from Github to customize the domain name.</p><h3>Step 3: Push <code>Output</code> folder to remote</h3><p><code>Publish</code> has an extensible <code>DeploymentMethod</code> API which can be used to implement different deployment methods. Unfortunately, deployment to Github Pages is not a built-in feature. At the time of writing, there is a pull request which implements GithubPages Deploymentmethod, but it is still being developed.</p><p>Since publishing to GitHub pages is quite easy, we can alternatively write some shell scripts to push code from the <code>Output</code> folder to the <code>gh-pages</code> branch of our repository and configure the repository to serve our static website from the <code>gh-pages</code> branch.</p><p>The <code>deploy.sh</code> script looks like following:</p><pre><code><div class="highlight"><span></span><span class="ch">#!/bin/sh</span>

<span class="c1">## Rebuild the website</span>
publish generate

<span class="c1">## Add custom domain CNAME</span>
<span class="nb">echo</span> <span class="s2">&quot;swiftvietnam.com&quot;</span> &gt; Output/CNAME

<span class="c1">## Add files to git</span>
git add .
git commit -m <span class="s2">&quot;Update production&quot;</span>
git push origin master

<span class="c1">## Deploy to gh-pages</span>
<span class="nb">echo</span> <span class="s2">&quot;--&gt; Deploy to live server --&gt;&quot;</span>
git subtree push --prefix Output origin gh-pages
</div></code></pre><h2>6. Conclusion:</h2><p>In this tutorial, we have created a foundation for our static-generated website by finishing many configuration tasks:</p><ul><li>Created a complete swift development environment on Ubuntu 18.04 LTS with Visual Studio Code and SourceKit-LSP</li><li>Installed <code>Publish</code> tool to create and publish our website</li><li>Tested and published the first version of our website to Github Pages, running on a custom domain.</li></ul><p>In future posts, we will investigate how to use <a href="https://github.com/JohnSundell/Plot">Plot</a> to change the UI, to use <a href="https://github.com/JohnSundell/Splash">Splash</a> for syntax highlighting for Swift and to create different sections for our website.</p><p>Further in-depth resources and explanations can be found in the following links:</p><ul><li><a href="https://github.com/antranapp/swiftvietnam">SwiftVietnam's Github repository</a></li><li><a href="https://www.swiftbysundell.com/videos/static-site-generation-in-swift/">(Video) Static site generation in Swift</a></li><li><a href="https://github.com/JohnSundell/Publish">Publish's Github repository</a></li><li><a href="https://swift.org/download/#using-downloads">Swift installation instruction</a></li><li><a href="https://github.com/apple/sourcekit-lsp">SourceKit-LSP</a></li><li><a href="https://swiftvietnam.com//www.raywenderlich.com/8325890-a-complete-guide-to-swift-development-on-linux">A Complete Guide to Swift Development on Linux</a></li></ul>]]></content:encoded></item></channel></rss>